/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivacyPolicyImport } from './routes/privacy-policy'
import { Route as CopyrightImport } from './routes/copyright'
import { Route as IndexImport } from './routes/index'
import { Route as DatabaseIndexImport } from './routes/database/index'
import { Route as PlannerShipImport } from './routes/planner/ship'
import { Route as PlannerSaintImport } from './routes/planner/saint'
import { Route as PlannerNobleImport } from './routes/planner/noble'
import { Route as PlannerMercenaryImport } from './routes/planner/mercenary'
import { Route as PlannerExplorerImport } from './routes/planner/explorer'
import { Route as ExperimentalDodoLoadingImport } from './routes/experimental/dodo-loading'
import { Route as DatabaseTowerImport } from './routes/database/tower'
import { Route as DatabaseMapImport } from './routes/database/map'
import { Route as DatabaseMapCodeImport } from './routes/database/map_.$code'
import { Route as DatabasequestsQuestscrollImport } from './routes/database/(quests)/quest_scroll'
import { Route as DatabasequestsQuestitemImport } from './routes/database/(quests)/quest_item'
import { Route as DatabasequestsQuestImport } from './routes/database/(quests)/quest'
import { Route as DatabasepetsRidingpetImport } from './routes/database/(pets)/riding_pet'
import { Route as DatabasepetsPetskillstoneImport } from './routes/database/(pets)/pet_skill_stone'
import { Route as DatabasepetsPetcombinestoneImport } from './routes/database/(pets)/pet_combine_stone'
import { Route as DatabasepetsPetcombinehelpImport } from './routes/database/(pets)/pet_combine_help'
import { Route as DatabasepetsPetImport } from './routes/database/(pets)/pet'
import { Route as DatabasemoreSkillbookImport } from './routes/database/(more)/skill_book'
import { Route as DatabasemoreRandomboxImport } from './routes/database/(more)/random_box'
import { Route as DatabasemoreConsumableImport } from './routes/database/(more)/consumable'
import { Route as DatabasemoreBulletImport } from './routes/database/(more)/bullet'
import { Route as DatabasefishingFishingmaterialImport } from './routes/database/(fishing)/fishing_material'
import { Route as DatabasefishingFishingbaitImport } from './routes/database/(fishing)/fishing_bait'
import { Route as DatabaseextraEquipmentHatImport } from './routes/database/(extra-equipment)/hat'
import { Route as DatabaseextraEquipmentDressImport } from './routes/database/(extra-equipment)/dress'
import { Route as DatabaseextraEquipmentAccessoryImport } from './routes/database/(extra-equipment)/accessory'
import { Route as DatabaseessenceEssencehelpImport } from './routes/database/(essence)/essence_help'
import { Route as DatabaseessenceEssenceImport } from './routes/database/(essence)/essence'
import { Route as DatabaseenhancingUpgradestoneImport } from './routes/database/(enhancing)/upgrade_stone'
import { Route as DatabaseenhancingUpgradehelpImport } from './routes/database/(enhancing)/upgrade_help'
import { Route as DatabaseenhancingUpgradecrystalImport } from './routes/database/(enhancing)/upgrade_crystal'
import { Route as DatabaseenhancingSealbreakhelpImport } from './routes/database/(enhancing)/seal_break_help'
import { Route as DatabasecraftingRecipeImport } from './routes/database/(crafting)/recipe'
import { Route as DatabasecraftingProductionbookImport } from './routes/database/(crafting)/production_book'
import { Route as DatabasecraftingProductionImport } from './routes/database/(crafting)/production'
import { Route as DatabasecraftingMaterialImport } from './routes/database/(crafting)/material'
import { Route as DatabaseactorsNpcImport } from './routes/database/(actors)/npc'
import { Route as DatabaseactorsMonsterImport } from './routes/database/(actors)/monster'
import { Route as DatabaseweaponsarmorweaponsTwohandedswordImport } from './routes/database/(weapons_armor)/(weapons)/two_handed_sword'
import { Route as DatabaseweaponsarmorweaponsRifleImport } from './routes/database/(weapons_armor)/(weapons)/rifle'
import { Route as DatabaseweaponsarmorweaponsRapierImport } from './routes/database/(weapons_armor)/(weapons)/rapier'
import { Route as DatabaseweaponsarmorweaponsOnehandedswordImport } from './routes/database/(weapons_armor)/(weapons)/one_handed_sword'
import { Route as DatabaseweaponsarmorweaponsFishingrodImport } from './routes/database/(weapons_armor)/(weapons)/fishing_rod'
import { Route as DatabaseweaponsarmorweaponsDualsImport } from './routes/database/(weapons_armor)/(weapons)/duals'
import { Route as DatabaseweaponsarmorweaponsDaggerImport } from './routes/database/(weapons_armor)/(weapons)/dagger'
import { Route as DatabaseweaponsarmorweaponsCariadImport } from './routes/database/(weapons_armor)/(weapons)/cariad'
import { Route as DatabaseweaponsarmorarmorShoesImport } from './routes/database/(weapons_armor)/(armor)/shoes'
import { Route as DatabaseweaponsarmorarmorShieldImport } from './routes/database/(weapons_armor)/(armor)/shield'
import { Route as DatabaseweaponsarmorarmorPantsImport } from './routes/database/(weapons_armor)/(armor)/pants'
import { Route as DatabaseweaponsarmorarmorGauntletImport } from './routes/database/(weapons_armor)/(armor)/gauntlet'
import { Route as DatabaseweaponsarmorarmorCoatImport } from './routes/database/(weapons_armor)/(armor)/coat'
import { Route as DatabaseshiproutesShipspecialweaponImport } from './routes/database/(ship)/(routes)/ship_special_weapon'
import { Route as DatabaseshiproutesShipshellImport } from './routes/database/(ship)/(routes)/ship_shell'
import { Route as DatabaseshiproutesShipnormalweaponImport } from './routes/database/(ship)/(routes)/ship_normal_weapon'
import { Route as DatabaseshiproutesShipmainmastImport } from './routes/database/(ship)/(routes)/ship_main_mast'
import { Route as DatabaseshiproutesShipmagicstoneImport } from './routes/database/(ship)/(routes)/ship_magic_stone'
import { Route as DatabaseshiproutesShipheadmastImport } from './routes/database/(ship)/(routes)/ship_head_mast'
import { Route as DatabaseshiproutesShipfrontImport } from './routes/database/(ship)/(routes)/ship_front'
import { Route as DatabaseshiproutesShipflagImport } from './routes/database/(ship)/(routes)/ship_flag'
import { Route as DatabaseshiproutesShipfigureImport } from './routes/database/(ship)/(routes)/ship_figure'
import { Route as DatabaseshiproutesShipbodyImport } from './routes/database/(ship)/(routes)/ship_body'
import { Route as DatabaseshiproutesShipanchorImport } from './routes/database/(ship)/(routes)/ship_anchor'
import { Route as DatabasequestsQuestscrollCodeImport } from './routes/database/(quests)/quest_scroll_.$code'
import { Route as DatabasequestsQuestitemCodeImport } from './routes/database/(quests)/quest_item_.$code'
import { Route as DatabasequestsQuestCodeImport } from './routes/database/(quests)/quest_.$code'
import { Route as DatabasepetsRidingpetCodeImport } from './routes/database/(pets)/riding_pet_.$code'
import { Route as DatabasepetsPetskillstoneCodeImport } from './routes/database/(pets)/pet_skill_stone_.$code'
import { Route as DatabasepetsPetcombinestoneCodeImport } from './routes/database/(pets)/pet_combine_stone_.$code'
import { Route as DatabasepetsPetcombinehelpCodeImport } from './routes/database/(pets)/pet_combine_help_.$code'
import { Route as DatabasepetsPetCodeImport } from './routes/database/(pets)/pet_.$code'
import { Route as DatabasemoreSkillbookCodeImport } from './routes/database/(more)/skill_book_.$code'
import { Route as DatabasemoreRandomboxCodeImport } from './routes/database/(more)/random_box_.$code'
import { Route as DatabasemoreConsumableCodeImport } from './routes/database/(more)/consumable_.$code'
import { Route as DatabasemoreBulletCodeImport } from './routes/database/(more)/bullet_.$code'
import { Route as DatabasefishingFishingmaterialCodeImport } from './routes/database/(fishing)/fishing_material_.$code'
import { Route as DatabasefishingFishingbaitCodeImport } from './routes/database/(fishing)/fishing_bait_.$code'
import { Route as DatabaseextraEquipmentHatCodeImport } from './routes/database/(extra-equipment)/hat_.$code'
import { Route as DatabaseextraEquipmentDressCodeImport } from './routes/database/(extra-equipment)/dress_.$code'
import { Route as DatabaseextraEquipmentAccessoryCodeImport } from './routes/database/(extra-equipment)/accessory_.$code'
import { Route as DatabaseessenceEssencehelpCodeImport } from './routes/database/(essence)/essence_help_.$code'
import { Route as DatabaseessenceEssenceCodeImport } from './routes/database/(essence)/essence_.$code'
import { Route as DatabaseenhancingUpgradestoneCodeImport } from './routes/database/(enhancing)/upgrade_stone_.$code'
import { Route as DatabaseenhancingUpgradehelpCodeImport } from './routes/database/(enhancing)/upgrade_help_.$code'
import { Route as DatabaseenhancingUpgradecrystalCodeImport } from './routes/database/(enhancing)/upgrade_crystal_.$code'
import { Route as DatabaseenhancingSealbreakhelpCodeImport } from './routes/database/(enhancing)/seal_break_help_.$code'
import { Route as DatabasecraftingRecipeCodeImport } from './routes/database/(crafting)/recipe_.$code'
import { Route as DatabasecraftingProductionbookCodeImport } from './routes/database/(crafting)/production_book_.$code'
import { Route as DatabasecraftingProductionCodeImport } from './routes/database/(crafting)/production_.$code'
import { Route as DatabasecraftingMaterialCodeImport } from './routes/database/(crafting)/material_.$code'
import { Route as DatabaseactorsNpcCodeImport } from './routes/database/(actors)/npc_.$code'
import { Route as DatabaseactorsMonsterCodeImport } from './routes/database/(actors)/monster_.$code'
import { Route as DatabaseweaponsarmorweaponsTwohandedswordCodeImport } from './routes/database/(weapons_armor)/(weapons)/two_handed_sword_.$code'
import { Route as DatabaseweaponsarmorweaponsRifleCodeImport } from './routes/database/(weapons_armor)/(weapons)/rifle_.$code'
import { Route as DatabaseweaponsarmorweaponsRapierCodeImport } from './routes/database/(weapons_armor)/(weapons)/rapier_.$code'
import { Route as DatabaseweaponsarmorweaponsOnehandedswordCodeImport } from './routes/database/(weapons_armor)/(weapons)/one_handed_sword_.$code'
import { Route as DatabaseweaponsarmorweaponsFishingrodCodeImport } from './routes/database/(weapons_armor)/(weapons)/fishing_rod_.$code'
import { Route as DatabaseweaponsarmorweaponsDualsCodeImport } from './routes/database/(weapons_armor)/(weapons)/duals_.$code'
import { Route as DatabaseweaponsarmorweaponsDaggerCodeImport } from './routes/database/(weapons_armor)/(weapons)/dagger_.$code'
import { Route as DatabaseweaponsarmorweaponsCariadCodeImport } from './routes/database/(weapons_armor)/(weapons)/cariad_.$code'
import { Route as DatabaseweaponsarmorarmorShoesCodeImport } from './routes/database/(weapons_armor)/(armor)/shoes_.$code'
import { Route as DatabaseweaponsarmorarmorShieldCodeImport } from './routes/database/(weapons_armor)/(armor)/shield_.$code'
import { Route as DatabaseweaponsarmorarmorPantsCodeImport } from './routes/database/(weapons_armor)/(armor)/pants_.$code'
import { Route as DatabaseweaponsarmorarmorGauntletCodeImport } from './routes/database/(weapons_armor)/(armor)/gauntlet_.$code'
import { Route as DatabaseweaponsarmorarmorCoatCodeImport } from './routes/database/(weapons_armor)/(armor)/coat_.$code'
import { Route as DatabaseshiproutesShipspecialweaponCodeImport } from './routes/database/(ship)/(routes)/ship_special_weapon_.$code'
import { Route as DatabaseshiproutesShipshellCodeImport } from './routes/database/(ship)/(routes)/ship_shell_.$code'
import { Route as DatabaseshiproutesShipnormalweaponCodeImport } from './routes/database/(ship)/(routes)/ship_normal_weapon_.$code'
import { Route as DatabaseshiproutesShipmainmastCodeImport } from './routes/database/(ship)/(routes)/ship_main_mast_.$code'
import { Route as DatabaseshiproutesShipmagicstoneCodeImport } from './routes/database/(ship)/(routes)/ship_magic_stone_.$code'
import { Route as DatabaseshiproutesShipheadmastCodeImport } from './routes/database/(ship)/(routes)/ship_head_mast_.$code'
import { Route as DatabaseshiproutesShipfrontCodeImport } from './routes/database/(ship)/(routes)/ship_front_.$code'
import { Route as DatabaseshiproutesShipflagCodeImport } from './routes/database/(ship)/(routes)/ship_flag_.$code'
import { Route as DatabaseshiproutesShipfigureCodeImport } from './routes/database/(ship)/(routes)/ship_figure_.$code'
import { Route as DatabaseshiproutesShipbodyCodeImport } from './routes/database/(ship)/(routes)/ship_body_.$code'
import { Route as DatabaseshiproutesShipanchorCodeImport } from './routes/database/(ship)/(routes)/ship_anchor_.$code'

// Create/Update Routes

const PrivacyPolicyRoute = PrivacyPolicyImport.update({
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const CopyrightRoute = CopyrightImport.update({
  path: '/copyright',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseIndexRoute = DatabaseIndexImport.update({
  path: '/database/',
  getParentRoute: () => rootRoute,
} as any)

const PlannerShipRoute = PlannerShipImport.update({
  path: '/planner/ship',
  getParentRoute: () => rootRoute,
} as any)

const PlannerSaintRoute = PlannerSaintImport.update({
  path: '/planner/saint',
  getParentRoute: () => rootRoute,
} as any)

const PlannerNobleRoute = PlannerNobleImport.update({
  path: '/planner/noble',
  getParentRoute: () => rootRoute,
} as any)

const PlannerMercenaryRoute = PlannerMercenaryImport.update({
  path: '/planner/mercenary',
  getParentRoute: () => rootRoute,
} as any)

const PlannerExplorerRoute = PlannerExplorerImport.update({
  path: '/planner/explorer',
  getParentRoute: () => rootRoute,
} as any)

const ExperimentalDodoLoadingRoute = ExperimentalDodoLoadingImport.update({
  path: '/experimental/dodo-loading',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseTowerRoute = DatabaseTowerImport.update({
  path: '/database/tower',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseMapRoute = DatabaseMapImport.update({
  path: '/database/map',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseMapCodeRoute = DatabaseMapCodeImport.update({
  path: '/database/map/$code',
  getParentRoute: () => rootRoute,
} as any)

const DatabasequestsQuestscrollRoute = DatabasequestsQuestscrollImport.update({
  path: '/database/quest_scroll',
  getParentRoute: () => rootRoute,
} as any)

const DatabasequestsQuestitemRoute = DatabasequestsQuestitemImport.update({
  path: '/database/quest_item',
  getParentRoute: () => rootRoute,
} as any)

const DatabasequestsQuestRoute = DatabasequestsQuestImport.update({
  path: '/database/quest',
  getParentRoute: () => rootRoute,
} as any)

const DatabasepetsRidingpetRoute = DatabasepetsRidingpetImport.update({
  path: '/database/riding_pet',
  getParentRoute: () => rootRoute,
} as any)

const DatabasepetsPetskillstoneRoute = DatabasepetsPetskillstoneImport.update({
  path: '/database/pet_skill_stone',
  getParentRoute: () => rootRoute,
} as any)

const DatabasepetsPetcombinestoneRoute =
  DatabasepetsPetcombinestoneImport.update({
    path: '/database/pet_combine_stone',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasepetsPetcombinehelpRoute = DatabasepetsPetcombinehelpImport.update(
  {
    path: '/database/pet_combine_help',
    getParentRoute: () => rootRoute,
  } as any,
)

const DatabasepetsPetRoute = DatabasepetsPetImport.update({
  path: '/database/pet',
  getParentRoute: () => rootRoute,
} as any)

const DatabasemoreSkillbookRoute = DatabasemoreSkillbookImport.update({
  path: '/database/skill_book',
  getParentRoute: () => rootRoute,
} as any)

const DatabasemoreRandomboxRoute = DatabasemoreRandomboxImport.update({
  path: '/database/random_box',
  getParentRoute: () => rootRoute,
} as any)

const DatabasemoreConsumableRoute = DatabasemoreConsumableImport.update({
  path: '/database/consumable',
  getParentRoute: () => rootRoute,
} as any)

const DatabasemoreBulletRoute = DatabasemoreBulletImport.update({
  path: '/database/bullet',
  getParentRoute: () => rootRoute,
} as any)

const DatabasefishingFishingmaterialRoute =
  DatabasefishingFishingmaterialImport.update({
    path: '/database/fishing_material',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasefishingFishingbaitRoute = DatabasefishingFishingbaitImport.update(
  {
    path: '/database/fishing_bait',
    getParentRoute: () => rootRoute,
  } as any,
)

const DatabaseextraEquipmentHatRoute = DatabaseextraEquipmentHatImport.update({
  path: '/database/hat',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseextraEquipmentDressRoute =
  DatabaseextraEquipmentDressImport.update({
    path: '/database/dress',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseextraEquipmentAccessoryRoute =
  DatabaseextraEquipmentAccessoryImport.update({
    path: '/database/accessory',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseessenceEssencehelpRoute = DatabaseessenceEssencehelpImport.update(
  {
    path: '/database/essence_help',
    getParentRoute: () => rootRoute,
  } as any,
)

const DatabaseessenceEssenceRoute = DatabaseessenceEssenceImport.update({
  path: '/database/essence',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseenhancingUpgradestoneRoute =
  DatabaseenhancingUpgradestoneImport.update({
    path: '/database/upgrade_stone',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseenhancingUpgradehelpRoute =
  DatabaseenhancingUpgradehelpImport.update({
    path: '/database/upgrade_help',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseenhancingUpgradecrystalRoute =
  DatabaseenhancingUpgradecrystalImport.update({
    path: '/database/upgrade_crystal',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseenhancingSealbreakhelpRoute =
  DatabaseenhancingSealbreakhelpImport.update({
    path: '/database/seal_break_help',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasecraftingRecipeRoute = DatabasecraftingRecipeImport.update({
  path: '/database/recipe',
  getParentRoute: () => rootRoute,
} as any)

const DatabasecraftingProductionbookRoute =
  DatabasecraftingProductionbookImport.update({
    path: '/database/production_book',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasecraftingProductionRoute = DatabasecraftingProductionImport.update(
  {
    path: '/database/production',
    getParentRoute: () => rootRoute,
  } as any,
)

const DatabasecraftingMaterialRoute = DatabasecraftingMaterialImport.update({
  path: '/database/material',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseactorsNpcRoute = DatabaseactorsNpcImport.update({
  path: '/database/npc',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseactorsMonsterRoute = DatabaseactorsMonsterImport.update({
  path: '/database/monster',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseweaponsarmorweaponsTwohandedswordRoute =
  DatabaseweaponsarmorweaponsTwohandedswordImport.update({
    path: '/database/two_handed_sword',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsRifleRoute =
  DatabaseweaponsarmorweaponsRifleImport.update({
    path: '/database/rifle',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsRapierRoute =
  DatabaseweaponsarmorweaponsRapierImport.update({
    path: '/database/rapier',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsOnehandedswordRoute =
  DatabaseweaponsarmorweaponsOnehandedswordImport.update({
    path: '/database/one_handed_sword',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsFishingrodRoute =
  DatabaseweaponsarmorweaponsFishingrodImport.update({
    path: '/database/fishing_rod',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsDualsRoute =
  DatabaseweaponsarmorweaponsDualsImport.update({
    path: '/database/duals',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsDaggerRoute =
  DatabaseweaponsarmorweaponsDaggerImport.update({
    path: '/database/dagger',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsCariadRoute =
  DatabaseweaponsarmorweaponsCariadImport.update({
    path: '/database/cariad',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorarmorShoesRoute =
  DatabaseweaponsarmorarmorShoesImport.update({
    path: '/database/shoes',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorarmorShieldRoute =
  DatabaseweaponsarmorarmorShieldImport.update({
    path: '/database/shield',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorarmorPantsRoute =
  DatabaseweaponsarmorarmorPantsImport.update({
    path: '/database/pants',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorarmorGauntletRoute =
  DatabaseweaponsarmorarmorGauntletImport.update({
    path: '/database/gauntlet',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorarmorCoatRoute =
  DatabaseweaponsarmorarmorCoatImport.update({
    path: '/database/coat',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipspecialweaponRoute =
  DatabaseshiproutesShipspecialweaponImport.update({
    path: '/database/ship_special_weapon',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipshellRoute =
  DatabaseshiproutesShipshellImport.update({
    path: '/database/ship_shell',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipnormalweaponRoute =
  DatabaseshiproutesShipnormalweaponImport.update({
    path: '/database/ship_normal_weapon',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipmainmastRoute =
  DatabaseshiproutesShipmainmastImport.update({
    path: '/database/ship_main_mast',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipmagicstoneRoute =
  DatabaseshiproutesShipmagicstoneImport.update({
    path: '/database/ship_magic_stone',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipheadmastRoute =
  DatabaseshiproutesShipheadmastImport.update({
    path: '/database/ship_head_mast',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipfrontRoute =
  DatabaseshiproutesShipfrontImport.update({
    path: '/database/ship_front',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipflagRoute = DatabaseshiproutesShipflagImport.update(
  {
    path: '/database/ship_flag',
    getParentRoute: () => rootRoute,
  } as any,
)

const DatabaseshiproutesShipfigureRoute =
  DatabaseshiproutesShipfigureImport.update({
    path: '/database/ship_figure',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipbodyRoute = DatabaseshiproutesShipbodyImport.update(
  {
    path: '/database/ship_body',
    getParentRoute: () => rootRoute,
  } as any,
)

const DatabaseshiproutesShipanchorRoute =
  DatabaseshiproutesShipanchorImport.update({
    path: '/database/ship_anchor',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasequestsQuestscrollCodeRoute =
  DatabasequestsQuestscrollCodeImport.update({
    path: '/database/quest_scroll/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasequestsQuestitemCodeRoute =
  DatabasequestsQuestitemCodeImport.update({
    path: '/database/quest_item/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasequestsQuestCodeRoute = DatabasequestsQuestCodeImport.update({
  path: '/database/quest/$code',
  getParentRoute: () => rootRoute,
} as any)

const DatabasepetsRidingpetCodeRoute = DatabasepetsRidingpetCodeImport.update({
  path: '/database/riding_pet/$code',
  getParentRoute: () => rootRoute,
} as any)

const DatabasepetsPetskillstoneCodeRoute =
  DatabasepetsPetskillstoneCodeImport.update({
    path: '/database/pet_skill_stone/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasepetsPetcombinestoneCodeRoute =
  DatabasepetsPetcombinestoneCodeImport.update({
    path: '/database/pet_combine_stone/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasepetsPetcombinehelpCodeRoute =
  DatabasepetsPetcombinehelpCodeImport.update({
    path: '/database/pet_combine_help/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasepetsPetCodeRoute = DatabasepetsPetCodeImport.update({
  path: '/database/pet/$code',
  getParentRoute: () => rootRoute,
} as any)

const DatabasemoreSkillbookCodeRoute = DatabasemoreSkillbookCodeImport.update({
  path: '/database/skill_book/$code',
  getParentRoute: () => rootRoute,
} as any)

const DatabasemoreRandomboxCodeRoute = DatabasemoreRandomboxCodeImport.update({
  path: '/database/random_box/$code',
  getParentRoute: () => rootRoute,
} as any)

const DatabasemoreConsumableCodeRoute = DatabasemoreConsumableCodeImport.update(
  {
    path: '/database/consumable/$code',
    getParentRoute: () => rootRoute,
  } as any,
)

const DatabasemoreBulletCodeRoute = DatabasemoreBulletCodeImport.update({
  path: '/database/bullet/$code',
  getParentRoute: () => rootRoute,
} as any)

const DatabasefishingFishingmaterialCodeRoute =
  DatabasefishingFishingmaterialCodeImport.update({
    path: '/database/fishing_material/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasefishingFishingbaitCodeRoute =
  DatabasefishingFishingbaitCodeImport.update({
    path: '/database/fishing_bait/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseextraEquipmentHatCodeRoute =
  DatabaseextraEquipmentHatCodeImport.update({
    path: '/database/hat/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseextraEquipmentDressCodeRoute =
  DatabaseextraEquipmentDressCodeImport.update({
    path: '/database/dress/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseextraEquipmentAccessoryCodeRoute =
  DatabaseextraEquipmentAccessoryCodeImport.update({
    path: '/database/accessory/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseessenceEssencehelpCodeRoute =
  DatabaseessenceEssencehelpCodeImport.update({
    path: '/database/essence_help/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseessenceEssenceCodeRoute = DatabaseessenceEssenceCodeImport.update(
  {
    path: '/database/essence/$code',
    getParentRoute: () => rootRoute,
  } as any,
)

const DatabaseenhancingUpgradestoneCodeRoute =
  DatabaseenhancingUpgradestoneCodeImport.update({
    path: '/database/upgrade_stone/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseenhancingUpgradehelpCodeRoute =
  DatabaseenhancingUpgradehelpCodeImport.update({
    path: '/database/upgrade_help/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseenhancingUpgradecrystalCodeRoute =
  DatabaseenhancingUpgradecrystalCodeImport.update({
    path: '/database/upgrade_crystal/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseenhancingSealbreakhelpCodeRoute =
  DatabaseenhancingSealbreakhelpCodeImport.update({
    path: '/database/seal_break_help/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasecraftingRecipeCodeRoute = DatabasecraftingRecipeCodeImport.update(
  {
    path: '/database/recipe/$code',
    getParentRoute: () => rootRoute,
  } as any,
)

const DatabasecraftingProductionbookCodeRoute =
  DatabasecraftingProductionbookCodeImport.update({
    path: '/database/production_book/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasecraftingProductionCodeRoute =
  DatabasecraftingProductionCodeImport.update({
    path: '/database/production/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabasecraftingMaterialCodeRoute =
  DatabasecraftingMaterialCodeImport.update({
    path: '/database/material/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseactorsNpcCodeRoute = DatabaseactorsNpcCodeImport.update({
  path: '/database/npc/$code',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseactorsMonsterCodeRoute = DatabaseactorsMonsterCodeImport.update({
  path: '/database/monster/$code',
  getParentRoute: () => rootRoute,
} as any)

const DatabaseweaponsarmorweaponsTwohandedswordCodeRoute =
  DatabaseweaponsarmorweaponsTwohandedswordCodeImport.update({
    path: '/database/two_handed_sword/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsRifleCodeRoute =
  DatabaseweaponsarmorweaponsRifleCodeImport.update({
    path: '/database/rifle/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsRapierCodeRoute =
  DatabaseweaponsarmorweaponsRapierCodeImport.update({
    path: '/database/rapier/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsOnehandedswordCodeRoute =
  DatabaseweaponsarmorweaponsOnehandedswordCodeImport.update({
    path: '/database/one_handed_sword/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsFishingrodCodeRoute =
  DatabaseweaponsarmorweaponsFishingrodCodeImport.update({
    path: '/database/fishing_rod/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsDualsCodeRoute =
  DatabaseweaponsarmorweaponsDualsCodeImport.update({
    path: '/database/duals/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsDaggerCodeRoute =
  DatabaseweaponsarmorweaponsDaggerCodeImport.update({
    path: '/database/dagger/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorweaponsCariadCodeRoute =
  DatabaseweaponsarmorweaponsCariadCodeImport.update({
    path: '/database/cariad/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorarmorShoesCodeRoute =
  DatabaseweaponsarmorarmorShoesCodeImport.update({
    path: '/database/shoes/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorarmorShieldCodeRoute =
  DatabaseweaponsarmorarmorShieldCodeImport.update({
    path: '/database/shield/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorarmorPantsCodeRoute =
  DatabaseweaponsarmorarmorPantsCodeImport.update({
    path: '/database/pants/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorarmorGauntletCodeRoute =
  DatabaseweaponsarmorarmorGauntletCodeImport.update({
    path: '/database/gauntlet/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseweaponsarmorarmorCoatCodeRoute =
  DatabaseweaponsarmorarmorCoatCodeImport.update({
    path: '/database/coat/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipspecialweaponCodeRoute =
  DatabaseshiproutesShipspecialweaponCodeImport.update({
    path: '/database/ship_special_weapon/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipshellCodeRoute =
  DatabaseshiproutesShipshellCodeImport.update({
    path: '/database/ship_shell/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipnormalweaponCodeRoute =
  DatabaseshiproutesShipnormalweaponCodeImport.update({
    path: '/database/ship_normal_weapon/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipmainmastCodeRoute =
  DatabaseshiproutesShipmainmastCodeImport.update({
    path: '/database/ship_main_mast/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipmagicstoneCodeRoute =
  DatabaseshiproutesShipmagicstoneCodeImport.update({
    path: '/database/ship_magic_stone/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipheadmastCodeRoute =
  DatabaseshiproutesShipheadmastCodeImport.update({
    path: '/database/ship_head_mast/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipfrontCodeRoute =
  DatabaseshiproutesShipfrontCodeImport.update({
    path: '/database/ship_front/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipflagCodeRoute =
  DatabaseshiproutesShipflagCodeImport.update({
    path: '/database/ship_flag/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipfigureCodeRoute =
  DatabaseshiproutesShipfigureCodeImport.update({
    path: '/database/ship_figure/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipbodyCodeRoute =
  DatabaseshiproutesShipbodyCodeImport.update({
    path: '/database/ship_body/$code',
    getParentRoute: () => rootRoute,
  } as any)

const DatabaseshiproutesShipanchorCodeRoute =
  DatabaseshiproutesShipanchorCodeImport.update({
    path: '/database/ship_anchor/$code',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/copyright': {
      id: '/copyright'
      path: '/copyright'
      fullPath: '/copyright'
      preLoaderRoute: typeof CopyrightImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/database/map': {
      id: '/database/map'
      path: '/database/map'
      fullPath: '/database/map'
      preLoaderRoute: typeof DatabaseMapImport
      parentRoute: typeof rootRoute
    }
    '/database/tower': {
      id: '/database/tower'
      path: '/database/tower'
      fullPath: '/database/tower'
      preLoaderRoute: typeof DatabaseTowerImport
      parentRoute: typeof rootRoute
    }
    '/experimental/dodo-loading': {
      id: '/experimental/dodo-loading'
      path: '/experimental/dodo-loading'
      fullPath: '/experimental/dodo-loading'
      preLoaderRoute: typeof ExperimentalDodoLoadingImport
      parentRoute: typeof rootRoute
    }
    '/planner/explorer': {
      id: '/planner/explorer'
      path: '/planner/explorer'
      fullPath: '/planner/explorer'
      preLoaderRoute: typeof PlannerExplorerImport
      parentRoute: typeof rootRoute
    }
    '/planner/mercenary': {
      id: '/planner/mercenary'
      path: '/planner/mercenary'
      fullPath: '/planner/mercenary'
      preLoaderRoute: typeof PlannerMercenaryImport
      parentRoute: typeof rootRoute
    }
    '/planner/noble': {
      id: '/planner/noble'
      path: '/planner/noble'
      fullPath: '/planner/noble'
      preLoaderRoute: typeof PlannerNobleImport
      parentRoute: typeof rootRoute
    }
    '/planner/saint': {
      id: '/planner/saint'
      path: '/planner/saint'
      fullPath: '/planner/saint'
      preLoaderRoute: typeof PlannerSaintImport
      parentRoute: typeof rootRoute
    }
    '/planner/ship': {
      id: '/planner/ship'
      path: '/planner/ship'
      fullPath: '/planner/ship'
      preLoaderRoute: typeof PlannerShipImport
      parentRoute: typeof rootRoute
    }
    '/database/': {
      id: '/database/'
      path: '/database'
      fullPath: '/database'
      preLoaderRoute: typeof DatabaseIndexImport
      parentRoute: typeof rootRoute
    }
    '/database/(actors)/monster': {
      id: '/database/monster'
      path: '/database/monster'
      fullPath: '/database/monster'
      preLoaderRoute: typeof DatabaseactorsMonsterImport
      parentRoute: typeof rootRoute
    }
    '/database/(actors)/npc': {
      id: '/database/npc'
      path: '/database/npc'
      fullPath: '/database/npc'
      preLoaderRoute: typeof DatabaseactorsNpcImport
      parentRoute: typeof rootRoute
    }
    '/database/(crafting)/material': {
      id: '/database/material'
      path: '/database/material'
      fullPath: '/database/material'
      preLoaderRoute: typeof DatabasecraftingMaterialImport
      parentRoute: typeof rootRoute
    }
    '/database/(crafting)/production': {
      id: '/database/production'
      path: '/database/production'
      fullPath: '/database/production'
      preLoaderRoute: typeof DatabasecraftingProductionImport
      parentRoute: typeof rootRoute
    }
    '/database/(crafting)/production_book': {
      id: '/database/production_book'
      path: '/database/production_book'
      fullPath: '/database/production_book'
      preLoaderRoute: typeof DatabasecraftingProductionbookImport
      parentRoute: typeof rootRoute
    }
    '/database/(crafting)/recipe': {
      id: '/database/recipe'
      path: '/database/recipe'
      fullPath: '/database/recipe'
      preLoaderRoute: typeof DatabasecraftingRecipeImport
      parentRoute: typeof rootRoute
    }
    '/database/(enhancing)/seal_break_help': {
      id: '/database/seal_break_help'
      path: '/database/seal_break_help'
      fullPath: '/database/seal_break_help'
      preLoaderRoute: typeof DatabaseenhancingSealbreakhelpImport
      parentRoute: typeof rootRoute
    }
    '/database/(enhancing)/upgrade_crystal': {
      id: '/database/upgrade_crystal'
      path: '/database/upgrade_crystal'
      fullPath: '/database/upgrade_crystal'
      preLoaderRoute: typeof DatabaseenhancingUpgradecrystalImport
      parentRoute: typeof rootRoute
    }
    '/database/(enhancing)/upgrade_help': {
      id: '/database/upgrade_help'
      path: '/database/upgrade_help'
      fullPath: '/database/upgrade_help'
      preLoaderRoute: typeof DatabaseenhancingUpgradehelpImport
      parentRoute: typeof rootRoute
    }
    '/database/(enhancing)/upgrade_stone': {
      id: '/database/upgrade_stone'
      path: '/database/upgrade_stone'
      fullPath: '/database/upgrade_stone'
      preLoaderRoute: typeof DatabaseenhancingUpgradestoneImport
      parentRoute: typeof rootRoute
    }
    '/database/(essence)/essence': {
      id: '/database/essence'
      path: '/database/essence'
      fullPath: '/database/essence'
      preLoaderRoute: typeof DatabaseessenceEssenceImport
      parentRoute: typeof rootRoute
    }
    '/database/(essence)/essence_help': {
      id: '/database/essence_help'
      path: '/database/essence_help'
      fullPath: '/database/essence_help'
      preLoaderRoute: typeof DatabaseessenceEssencehelpImport
      parentRoute: typeof rootRoute
    }
    '/database/(extra-equipment)/accessory': {
      id: '/database/accessory'
      path: '/database/accessory'
      fullPath: '/database/accessory'
      preLoaderRoute: typeof DatabaseextraEquipmentAccessoryImport
      parentRoute: typeof rootRoute
    }
    '/database/(extra-equipment)/dress': {
      id: '/database/dress'
      path: '/database/dress'
      fullPath: '/database/dress'
      preLoaderRoute: typeof DatabaseextraEquipmentDressImport
      parentRoute: typeof rootRoute
    }
    '/database/(extra-equipment)/hat': {
      id: '/database/hat'
      path: '/database/hat'
      fullPath: '/database/hat'
      preLoaderRoute: typeof DatabaseextraEquipmentHatImport
      parentRoute: typeof rootRoute
    }
    '/database/(fishing)/fishing_bait': {
      id: '/database/fishing_bait'
      path: '/database/fishing_bait'
      fullPath: '/database/fishing_bait'
      preLoaderRoute: typeof DatabasefishingFishingbaitImport
      parentRoute: typeof rootRoute
    }
    '/database/(fishing)/fishing_material': {
      id: '/database/fishing_material'
      path: '/database/fishing_material'
      fullPath: '/database/fishing_material'
      preLoaderRoute: typeof DatabasefishingFishingmaterialImport
      parentRoute: typeof rootRoute
    }
    '/database/(more)/bullet': {
      id: '/database/bullet'
      path: '/database/bullet'
      fullPath: '/database/bullet'
      preLoaderRoute: typeof DatabasemoreBulletImport
      parentRoute: typeof rootRoute
    }
    '/database/(more)/consumable': {
      id: '/database/consumable'
      path: '/database/consumable'
      fullPath: '/database/consumable'
      preLoaderRoute: typeof DatabasemoreConsumableImport
      parentRoute: typeof rootRoute
    }
    '/database/(more)/random_box': {
      id: '/database/random_box'
      path: '/database/random_box'
      fullPath: '/database/random_box'
      preLoaderRoute: typeof DatabasemoreRandomboxImport
      parentRoute: typeof rootRoute
    }
    '/database/(more)/skill_book': {
      id: '/database/skill_book'
      path: '/database/skill_book'
      fullPath: '/database/skill_book'
      preLoaderRoute: typeof DatabasemoreSkillbookImport
      parentRoute: typeof rootRoute
    }
    '/database/(pets)/pet': {
      id: '/database/pet'
      path: '/database/pet'
      fullPath: '/database/pet'
      preLoaderRoute: typeof DatabasepetsPetImport
      parentRoute: typeof rootRoute
    }
    '/database/(pets)/pet_combine_help': {
      id: '/database/pet_combine_help'
      path: '/database/pet_combine_help'
      fullPath: '/database/pet_combine_help'
      preLoaderRoute: typeof DatabasepetsPetcombinehelpImport
      parentRoute: typeof rootRoute
    }
    '/database/(pets)/pet_combine_stone': {
      id: '/database/pet_combine_stone'
      path: '/database/pet_combine_stone'
      fullPath: '/database/pet_combine_stone'
      preLoaderRoute: typeof DatabasepetsPetcombinestoneImport
      parentRoute: typeof rootRoute
    }
    '/database/(pets)/pet_skill_stone': {
      id: '/database/pet_skill_stone'
      path: '/database/pet_skill_stone'
      fullPath: '/database/pet_skill_stone'
      preLoaderRoute: typeof DatabasepetsPetskillstoneImport
      parentRoute: typeof rootRoute
    }
    '/database/(pets)/riding_pet': {
      id: '/database/riding_pet'
      path: '/database/riding_pet'
      fullPath: '/database/riding_pet'
      preLoaderRoute: typeof DatabasepetsRidingpetImport
      parentRoute: typeof rootRoute
    }
    '/database/(quests)/quest': {
      id: '/database/quest'
      path: '/database/quest'
      fullPath: '/database/quest'
      preLoaderRoute: typeof DatabasequestsQuestImport
      parentRoute: typeof rootRoute
    }
    '/database/(quests)/quest_item': {
      id: '/database/quest_item'
      path: '/database/quest_item'
      fullPath: '/database/quest_item'
      preLoaderRoute: typeof DatabasequestsQuestitemImport
      parentRoute: typeof rootRoute
    }
    '/database/(quests)/quest_scroll': {
      id: '/database/quest_scroll'
      path: '/database/quest_scroll'
      fullPath: '/database/quest_scroll'
      preLoaderRoute: typeof DatabasequestsQuestscrollImport
      parentRoute: typeof rootRoute
    }
    '/database/map/$code': {
      id: '/database/map/$code'
      path: '/database/map/$code'
      fullPath: '/database/map/$code'
      preLoaderRoute: typeof DatabaseMapCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(actors)/monster/$code': {
      id: '/database/monster/$code'
      path: '/database/monster/$code'
      fullPath: '/database/monster/$code'
      preLoaderRoute: typeof DatabaseactorsMonsterCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(actors)/npc/$code': {
      id: '/database/npc/$code'
      path: '/database/npc/$code'
      fullPath: '/database/npc/$code'
      preLoaderRoute: typeof DatabaseactorsNpcCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(crafting)/material/$code': {
      id: '/database/material/$code'
      path: '/database/material/$code'
      fullPath: '/database/material/$code'
      preLoaderRoute: typeof DatabasecraftingMaterialCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(crafting)/production/$code': {
      id: '/database/production/$code'
      path: '/database/production/$code'
      fullPath: '/database/production/$code'
      preLoaderRoute: typeof DatabasecraftingProductionCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(crafting)/production_book/$code': {
      id: '/database/production_book/$code'
      path: '/database/production_book/$code'
      fullPath: '/database/production_book/$code'
      preLoaderRoute: typeof DatabasecraftingProductionbookCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(crafting)/recipe/$code': {
      id: '/database/recipe/$code'
      path: '/database/recipe/$code'
      fullPath: '/database/recipe/$code'
      preLoaderRoute: typeof DatabasecraftingRecipeCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(enhancing)/seal_break_help/$code': {
      id: '/database/seal_break_help/$code'
      path: '/database/seal_break_help/$code'
      fullPath: '/database/seal_break_help/$code'
      preLoaderRoute: typeof DatabaseenhancingSealbreakhelpCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(enhancing)/upgrade_crystal/$code': {
      id: '/database/upgrade_crystal/$code'
      path: '/database/upgrade_crystal/$code'
      fullPath: '/database/upgrade_crystal/$code'
      preLoaderRoute: typeof DatabaseenhancingUpgradecrystalCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(enhancing)/upgrade_help/$code': {
      id: '/database/upgrade_help/$code'
      path: '/database/upgrade_help/$code'
      fullPath: '/database/upgrade_help/$code'
      preLoaderRoute: typeof DatabaseenhancingUpgradehelpCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(enhancing)/upgrade_stone/$code': {
      id: '/database/upgrade_stone/$code'
      path: '/database/upgrade_stone/$code'
      fullPath: '/database/upgrade_stone/$code'
      preLoaderRoute: typeof DatabaseenhancingUpgradestoneCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(essence)/essence/$code': {
      id: '/database/essence/$code'
      path: '/database/essence/$code'
      fullPath: '/database/essence/$code'
      preLoaderRoute: typeof DatabaseessenceEssenceCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(essence)/essence_help/$code': {
      id: '/database/essence_help/$code'
      path: '/database/essence_help/$code'
      fullPath: '/database/essence_help/$code'
      preLoaderRoute: typeof DatabaseessenceEssencehelpCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(extra-equipment)/accessory/$code': {
      id: '/database/accessory/$code'
      path: '/database/accessory/$code'
      fullPath: '/database/accessory/$code'
      preLoaderRoute: typeof DatabaseextraEquipmentAccessoryCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(extra-equipment)/dress/$code': {
      id: '/database/dress/$code'
      path: '/database/dress/$code'
      fullPath: '/database/dress/$code'
      preLoaderRoute: typeof DatabaseextraEquipmentDressCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(extra-equipment)/hat/$code': {
      id: '/database/hat/$code'
      path: '/database/hat/$code'
      fullPath: '/database/hat/$code'
      preLoaderRoute: typeof DatabaseextraEquipmentHatCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(fishing)/fishing_bait/$code': {
      id: '/database/fishing_bait/$code'
      path: '/database/fishing_bait/$code'
      fullPath: '/database/fishing_bait/$code'
      preLoaderRoute: typeof DatabasefishingFishingbaitCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(fishing)/fishing_material/$code': {
      id: '/database/fishing_material/$code'
      path: '/database/fishing_material/$code'
      fullPath: '/database/fishing_material/$code'
      preLoaderRoute: typeof DatabasefishingFishingmaterialCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(more)/bullet/$code': {
      id: '/database/bullet/$code'
      path: '/database/bullet/$code'
      fullPath: '/database/bullet/$code'
      preLoaderRoute: typeof DatabasemoreBulletCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(more)/consumable/$code': {
      id: '/database/consumable/$code'
      path: '/database/consumable/$code'
      fullPath: '/database/consumable/$code'
      preLoaderRoute: typeof DatabasemoreConsumableCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(more)/random_box/$code': {
      id: '/database/random_box/$code'
      path: '/database/random_box/$code'
      fullPath: '/database/random_box/$code'
      preLoaderRoute: typeof DatabasemoreRandomboxCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(more)/skill_book/$code': {
      id: '/database/skill_book/$code'
      path: '/database/skill_book/$code'
      fullPath: '/database/skill_book/$code'
      preLoaderRoute: typeof DatabasemoreSkillbookCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(pets)/pet/$code': {
      id: '/database/pet/$code'
      path: '/database/pet/$code'
      fullPath: '/database/pet/$code'
      preLoaderRoute: typeof DatabasepetsPetCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(pets)/pet_combine_help/$code': {
      id: '/database/pet_combine_help/$code'
      path: '/database/pet_combine_help/$code'
      fullPath: '/database/pet_combine_help/$code'
      preLoaderRoute: typeof DatabasepetsPetcombinehelpCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(pets)/pet_combine_stone/$code': {
      id: '/database/pet_combine_stone/$code'
      path: '/database/pet_combine_stone/$code'
      fullPath: '/database/pet_combine_stone/$code'
      preLoaderRoute: typeof DatabasepetsPetcombinestoneCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(pets)/pet_skill_stone/$code': {
      id: '/database/pet_skill_stone/$code'
      path: '/database/pet_skill_stone/$code'
      fullPath: '/database/pet_skill_stone/$code'
      preLoaderRoute: typeof DatabasepetsPetskillstoneCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(pets)/riding_pet/$code': {
      id: '/database/riding_pet/$code'
      path: '/database/riding_pet/$code'
      fullPath: '/database/riding_pet/$code'
      preLoaderRoute: typeof DatabasepetsRidingpetCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(quests)/quest/$code': {
      id: '/database/quest/$code'
      path: '/database/quest/$code'
      fullPath: '/database/quest/$code'
      preLoaderRoute: typeof DatabasequestsQuestCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(quests)/quest_item/$code': {
      id: '/database/quest_item/$code'
      path: '/database/quest_item/$code'
      fullPath: '/database/quest_item/$code'
      preLoaderRoute: typeof DatabasequestsQuestitemCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(quests)/quest_scroll/$code': {
      id: '/database/quest_scroll/$code'
      path: '/database/quest_scroll/$code'
      fullPath: '/database/quest_scroll/$code'
      preLoaderRoute: typeof DatabasequestsQuestscrollCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_anchor': {
      id: '/database/ship_anchor'
      path: '/database/ship_anchor'
      fullPath: '/database/ship_anchor'
      preLoaderRoute: typeof DatabaseshiproutesShipanchorImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_body': {
      id: '/database/ship_body'
      path: '/database/ship_body'
      fullPath: '/database/ship_body'
      preLoaderRoute: typeof DatabaseshiproutesShipbodyImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_figure': {
      id: '/database/ship_figure'
      path: '/database/ship_figure'
      fullPath: '/database/ship_figure'
      preLoaderRoute: typeof DatabaseshiproutesShipfigureImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_flag': {
      id: '/database/ship_flag'
      path: '/database/ship_flag'
      fullPath: '/database/ship_flag'
      preLoaderRoute: typeof DatabaseshiproutesShipflagImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_front': {
      id: '/database/ship_front'
      path: '/database/ship_front'
      fullPath: '/database/ship_front'
      preLoaderRoute: typeof DatabaseshiproutesShipfrontImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_head_mast': {
      id: '/database/ship_head_mast'
      path: '/database/ship_head_mast'
      fullPath: '/database/ship_head_mast'
      preLoaderRoute: typeof DatabaseshiproutesShipheadmastImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_magic_stone': {
      id: '/database/ship_magic_stone'
      path: '/database/ship_magic_stone'
      fullPath: '/database/ship_magic_stone'
      preLoaderRoute: typeof DatabaseshiproutesShipmagicstoneImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_main_mast': {
      id: '/database/ship_main_mast'
      path: '/database/ship_main_mast'
      fullPath: '/database/ship_main_mast'
      preLoaderRoute: typeof DatabaseshiproutesShipmainmastImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_normal_weapon': {
      id: '/database/ship_normal_weapon'
      path: '/database/ship_normal_weapon'
      fullPath: '/database/ship_normal_weapon'
      preLoaderRoute: typeof DatabaseshiproutesShipnormalweaponImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_shell': {
      id: '/database/ship_shell'
      path: '/database/ship_shell'
      fullPath: '/database/ship_shell'
      preLoaderRoute: typeof DatabaseshiproutesShipshellImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_special_weapon': {
      id: '/database/ship_special_weapon'
      path: '/database/ship_special_weapon'
      fullPath: '/database/ship_special_weapon'
      preLoaderRoute: typeof DatabaseshiproutesShipspecialweaponImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(armor)/coat': {
      id: '/database/coat'
      path: '/database/coat'
      fullPath: '/database/coat'
      preLoaderRoute: typeof DatabaseweaponsarmorarmorCoatImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(armor)/gauntlet': {
      id: '/database/gauntlet'
      path: '/database/gauntlet'
      fullPath: '/database/gauntlet'
      preLoaderRoute: typeof DatabaseweaponsarmorarmorGauntletImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(armor)/pants': {
      id: '/database/pants'
      path: '/database/pants'
      fullPath: '/database/pants'
      preLoaderRoute: typeof DatabaseweaponsarmorarmorPantsImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(armor)/shield': {
      id: '/database/shield'
      path: '/database/shield'
      fullPath: '/database/shield'
      preLoaderRoute: typeof DatabaseweaponsarmorarmorShieldImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(armor)/shoes': {
      id: '/database/shoes'
      path: '/database/shoes'
      fullPath: '/database/shoes'
      preLoaderRoute: typeof DatabaseweaponsarmorarmorShoesImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/cariad': {
      id: '/database/cariad'
      path: '/database/cariad'
      fullPath: '/database/cariad'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsCariadImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/dagger': {
      id: '/database/dagger'
      path: '/database/dagger'
      fullPath: '/database/dagger'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsDaggerImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/duals': {
      id: '/database/duals'
      path: '/database/duals'
      fullPath: '/database/duals'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsDualsImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/fishing_rod': {
      id: '/database/fishing_rod'
      path: '/database/fishing_rod'
      fullPath: '/database/fishing_rod'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsFishingrodImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/one_handed_sword': {
      id: '/database/one_handed_sword'
      path: '/database/one_handed_sword'
      fullPath: '/database/one_handed_sword'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsOnehandedswordImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/rapier': {
      id: '/database/rapier'
      path: '/database/rapier'
      fullPath: '/database/rapier'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsRapierImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/rifle': {
      id: '/database/rifle'
      path: '/database/rifle'
      fullPath: '/database/rifle'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsRifleImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/two_handed_sword': {
      id: '/database/two_handed_sword'
      path: '/database/two_handed_sword'
      fullPath: '/database/two_handed_sword'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsTwohandedswordImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_anchor/$code': {
      id: '/database/ship_anchor/$code'
      path: '/database/ship_anchor/$code'
      fullPath: '/database/ship_anchor/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipanchorCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_body/$code': {
      id: '/database/ship_body/$code'
      path: '/database/ship_body/$code'
      fullPath: '/database/ship_body/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipbodyCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_figure/$code': {
      id: '/database/ship_figure/$code'
      path: '/database/ship_figure/$code'
      fullPath: '/database/ship_figure/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipfigureCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_flag/$code': {
      id: '/database/ship_flag/$code'
      path: '/database/ship_flag/$code'
      fullPath: '/database/ship_flag/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipflagCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_front/$code': {
      id: '/database/ship_front/$code'
      path: '/database/ship_front/$code'
      fullPath: '/database/ship_front/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipfrontCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_head_mast/$code': {
      id: '/database/ship_head_mast/$code'
      path: '/database/ship_head_mast/$code'
      fullPath: '/database/ship_head_mast/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipheadmastCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_magic_stone/$code': {
      id: '/database/ship_magic_stone/$code'
      path: '/database/ship_magic_stone/$code'
      fullPath: '/database/ship_magic_stone/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipmagicstoneCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_main_mast/$code': {
      id: '/database/ship_main_mast/$code'
      path: '/database/ship_main_mast/$code'
      fullPath: '/database/ship_main_mast/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipmainmastCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_normal_weapon/$code': {
      id: '/database/ship_normal_weapon/$code'
      path: '/database/ship_normal_weapon/$code'
      fullPath: '/database/ship_normal_weapon/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipnormalweaponCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_shell/$code': {
      id: '/database/ship_shell/$code'
      path: '/database/ship_shell/$code'
      fullPath: '/database/ship_shell/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipshellCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(ship)/(routes)/ship_special_weapon/$code': {
      id: '/database/ship_special_weapon/$code'
      path: '/database/ship_special_weapon/$code'
      fullPath: '/database/ship_special_weapon/$code'
      preLoaderRoute: typeof DatabaseshiproutesShipspecialweaponCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(armor)/coat/$code': {
      id: '/database/coat/$code'
      path: '/database/coat/$code'
      fullPath: '/database/coat/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorarmorCoatCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(armor)/gauntlet/$code': {
      id: '/database/gauntlet/$code'
      path: '/database/gauntlet/$code'
      fullPath: '/database/gauntlet/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorarmorGauntletCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(armor)/pants/$code': {
      id: '/database/pants/$code'
      path: '/database/pants/$code'
      fullPath: '/database/pants/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorarmorPantsCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(armor)/shield/$code': {
      id: '/database/shield/$code'
      path: '/database/shield/$code'
      fullPath: '/database/shield/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorarmorShieldCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(armor)/shoes/$code': {
      id: '/database/shoes/$code'
      path: '/database/shoes/$code'
      fullPath: '/database/shoes/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorarmorShoesCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/cariad/$code': {
      id: '/database/cariad/$code'
      path: '/database/cariad/$code'
      fullPath: '/database/cariad/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsCariadCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/dagger/$code': {
      id: '/database/dagger/$code'
      path: '/database/dagger/$code'
      fullPath: '/database/dagger/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsDaggerCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/duals/$code': {
      id: '/database/duals/$code'
      path: '/database/duals/$code'
      fullPath: '/database/duals/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsDualsCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/fishing_rod/$code': {
      id: '/database/fishing_rod/$code'
      path: '/database/fishing_rod/$code'
      fullPath: '/database/fishing_rod/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsFishingrodCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/one_handed_sword/$code': {
      id: '/database/one_handed_sword/$code'
      path: '/database/one_handed_sword/$code'
      fullPath: '/database/one_handed_sword/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsOnehandedswordCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/rapier/$code': {
      id: '/database/rapier/$code'
      path: '/database/rapier/$code'
      fullPath: '/database/rapier/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsRapierCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/rifle/$code': {
      id: '/database/rifle/$code'
      path: '/database/rifle/$code'
      fullPath: '/database/rifle/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsRifleCodeImport
      parentRoute: typeof rootRoute
    }
    '/database/(weapons_armor)/(weapons)/two_handed_sword/$code': {
      id: '/database/two_handed_sword/$code'
      path: '/database/two_handed_sword/$code'
      fullPath: '/database/two_handed_sword/$code'
      preLoaderRoute: typeof DatabaseweaponsarmorweaponsTwohandedswordCodeImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/copyright': typeof CopyrightRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/database/map': typeof DatabaseMapRoute
  '/database/tower': typeof DatabaseTowerRoute
  '/experimental/dodo-loading': typeof ExperimentalDodoLoadingRoute
  '/planner/explorer': typeof PlannerExplorerRoute
  '/planner/mercenary': typeof PlannerMercenaryRoute
  '/planner/noble': typeof PlannerNobleRoute
  '/planner/saint': typeof PlannerSaintRoute
  '/planner/ship': typeof PlannerShipRoute
  '/database': typeof DatabaseIndexRoute
  '/database/monster': typeof DatabaseactorsMonsterRoute
  '/database/npc': typeof DatabaseactorsNpcRoute
  '/database/material': typeof DatabasecraftingMaterialRoute
  '/database/production': typeof DatabasecraftingProductionRoute
  '/database/production_book': typeof DatabasecraftingProductionbookRoute
  '/database/recipe': typeof DatabasecraftingRecipeRoute
  '/database/seal_break_help': typeof DatabaseenhancingSealbreakhelpRoute
  '/database/upgrade_crystal': typeof DatabaseenhancingUpgradecrystalRoute
  '/database/upgrade_help': typeof DatabaseenhancingUpgradehelpRoute
  '/database/upgrade_stone': typeof DatabaseenhancingUpgradestoneRoute
  '/database/essence': typeof DatabaseessenceEssenceRoute
  '/database/essence_help': typeof DatabaseessenceEssencehelpRoute
  '/database/accessory': typeof DatabaseextraEquipmentAccessoryRoute
  '/database/dress': typeof DatabaseextraEquipmentDressRoute
  '/database/hat': typeof DatabaseextraEquipmentHatRoute
  '/database/fishing_bait': typeof DatabasefishingFishingbaitRoute
  '/database/fishing_material': typeof DatabasefishingFishingmaterialRoute
  '/database/bullet': typeof DatabasemoreBulletRoute
  '/database/consumable': typeof DatabasemoreConsumableRoute
  '/database/random_box': typeof DatabasemoreRandomboxRoute
  '/database/skill_book': typeof DatabasemoreSkillbookRoute
  '/database/pet': typeof DatabasepetsPetRoute
  '/database/pet_combine_help': typeof DatabasepetsPetcombinehelpRoute
  '/database/pet_combine_stone': typeof DatabasepetsPetcombinestoneRoute
  '/database/pet_skill_stone': typeof DatabasepetsPetskillstoneRoute
  '/database/riding_pet': typeof DatabasepetsRidingpetRoute
  '/database/quest': typeof DatabasequestsQuestRoute
  '/database/quest_item': typeof DatabasequestsQuestitemRoute
  '/database/quest_scroll': typeof DatabasequestsQuestscrollRoute
  '/database/map/$code': typeof DatabaseMapCodeRoute
  '/database/monster/$code': typeof DatabaseactorsMonsterCodeRoute
  '/database/npc/$code': typeof DatabaseactorsNpcCodeRoute
  '/database/material/$code': typeof DatabasecraftingMaterialCodeRoute
  '/database/production/$code': typeof DatabasecraftingProductionCodeRoute
  '/database/production_book/$code': typeof DatabasecraftingProductionbookCodeRoute
  '/database/recipe/$code': typeof DatabasecraftingRecipeCodeRoute
  '/database/seal_break_help/$code': typeof DatabaseenhancingSealbreakhelpCodeRoute
  '/database/upgrade_crystal/$code': typeof DatabaseenhancingUpgradecrystalCodeRoute
  '/database/upgrade_help/$code': typeof DatabaseenhancingUpgradehelpCodeRoute
  '/database/upgrade_stone/$code': typeof DatabaseenhancingUpgradestoneCodeRoute
  '/database/essence/$code': typeof DatabaseessenceEssenceCodeRoute
  '/database/essence_help/$code': typeof DatabaseessenceEssencehelpCodeRoute
  '/database/accessory/$code': typeof DatabaseextraEquipmentAccessoryCodeRoute
  '/database/dress/$code': typeof DatabaseextraEquipmentDressCodeRoute
  '/database/hat/$code': typeof DatabaseextraEquipmentHatCodeRoute
  '/database/fishing_bait/$code': typeof DatabasefishingFishingbaitCodeRoute
  '/database/fishing_material/$code': typeof DatabasefishingFishingmaterialCodeRoute
  '/database/bullet/$code': typeof DatabasemoreBulletCodeRoute
  '/database/consumable/$code': typeof DatabasemoreConsumableCodeRoute
  '/database/random_box/$code': typeof DatabasemoreRandomboxCodeRoute
  '/database/skill_book/$code': typeof DatabasemoreSkillbookCodeRoute
  '/database/pet/$code': typeof DatabasepetsPetCodeRoute
  '/database/pet_combine_help/$code': typeof DatabasepetsPetcombinehelpCodeRoute
  '/database/pet_combine_stone/$code': typeof DatabasepetsPetcombinestoneCodeRoute
  '/database/pet_skill_stone/$code': typeof DatabasepetsPetskillstoneCodeRoute
  '/database/riding_pet/$code': typeof DatabasepetsRidingpetCodeRoute
  '/database/quest/$code': typeof DatabasequestsQuestCodeRoute
  '/database/quest_item/$code': typeof DatabasequestsQuestitemCodeRoute
  '/database/quest_scroll/$code': typeof DatabasequestsQuestscrollCodeRoute
  '/database/ship_anchor': typeof DatabaseshiproutesShipanchorRoute
  '/database/ship_body': typeof DatabaseshiproutesShipbodyRoute
  '/database/ship_figure': typeof DatabaseshiproutesShipfigureRoute
  '/database/ship_flag': typeof DatabaseshiproutesShipflagRoute
  '/database/ship_front': typeof DatabaseshiproutesShipfrontRoute
  '/database/ship_head_mast': typeof DatabaseshiproutesShipheadmastRoute
  '/database/ship_magic_stone': typeof DatabaseshiproutesShipmagicstoneRoute
  '/database/ship_main_mast': typeof DatabaseshiproutesShipmainmastRoute
  '/database/ship_normal_weapon': typeof DatabaseshiproutesShipnormalweaponRoute
  '/database/ship_shell': typeof DatabaseshiproutesShipshellRoute
  '/database/ship_special_weapon': typeof DatabaseshiproutesShipspecialweaponRoute
  '/database/coat': typeof DatabaseweaponsarmorarmorCoatRoute
  '/database/gauntlet': typeof DatabaseweaponsarmorarmorGauntletRoute
  '/database/pants': typeof DatabaseweaponsarmorarmorPantsRoute
  '/database/shield': typeof DatabaseweaponsarmorarmorShieldRoute
  '/database/shoes': typeof DatabaseweaponsarmorarmorShoesRoute
  '/database/cariad': typeof DatabaseweaponsarmorweaponsCariadRoute
  '/database/dagger': typeof DatabaseweaponsarmorweaponsDaggerRoute
  '/database/duals': typeof DatabaseweaponsarmorweaponsDualsRoute
  '/database/fishing_rod': typeof DatabaseweaponsarmorweaponsFishingrodRoute
  '/database/one_handed_sword': typeof DatabaseweaponsarmorweaponsOnehandedswordRoute
  '/database/rapier': typeof DatabaseweaponsarmorweaponsRapierRoute
  '/database/rifle': typeof DatabaseweaponsarmorweaponsRifleRoute
  '/database/two_handed_sword': typeof DatabaseweaponsarmorweaponsTwohandedswordRoute
  '/database/ship_anchor/$code': typeof DatabaseshiproutesShipanchorCodeRoute
  '/database/ship_body/$code': typeof DatabaseshiproutesShipbodyCodeRoute
  '/database/ship_figure/$code': typeof DatabaseshiproutesShipfigureCodeRoute
  '/database/ship_flag/$code': typeof DatabaseshiproutesShipflagCodeRoute
  '/database/ship_front/$code': typeof DatabaseshiproutesShipfrontCodeRoute
  '/database/ship_head_mast/$code': typeof DatabaseshiproutesShipheadmastCodeRoute
  '/database/ship_magic_stone/$code': typeof DatabaseshiproutesShipmagicstoneCodeRoute
  '/database/ship_main_mast/$code': typeof DatabaseshiproutesShipmainmastCodeRoute
  '/database/ship_normal_weapon/$code': typeof DatabaseshiproutesShipnormalweaponCodeRoute
  '/database/ship_shell/$code': typeof DatabaseshiproutesShipshellCodeRoute
  '/database/ship_special_weapon/$code': typeof DatabaseshiproutesShipspecialweaponCodeRoute
  '/database/coat/$code': typeof DatabaseweaponsarmorarmorCoatCodeRoute
  '/database/gauntlet/$code': typeof DatabaseweaponsarmorarmorGauntletCodeRoute
  '/database/pants/$code': typeof DatabaseweaponsarmorarmorPantsCodeRoute
  '/database/shield/$code': typeof DatabaseweaponsarmorarmorShieldCodeRoute
  '/database/shoes/$code': typeof DatabaseweaponsarmorarmorShoesCodeRoute
  '/database/cariad/$code': typeof DatabaseweaponsarmorweaponsCariadCodeRoute
  '/database/dagger/$code': typeof DatabaseweaponsarmorweaponsDaggerCodeRoute
  '/database/duals/$code': typeof DatabaseweaponsarmorweaponsDualsCodeRoute
  '/database/fishing_rod/$code': typeof DatabaseweaponsarmorweaponsFishingrodCodeRoute
  '/database/one_handed_sword/$code': typeof DatabaseweaponsarmorweaponsOnehandedswordCodeRoute
  '/database/rapier/$code': typeof DatabaseweaponsarmorweaponsRapierCodeRoute
  '/database/rifle/$code': typeof DatabaseweaponsarmorweaponsRifleCodeRoute
  '/database/two_handed_sword/$code': typeof DatabaseweaponsarmorweaponsTwohandedswordCodeRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/copyright': typeof CopyrightRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/database/map': typeof DatabaseMapRoute
  '/database/tower': typeof DatabaseTowerRoute
  '/experimental/dodo-loading': typeof ExperimentalDodoLoadingRoute
  '/planner/explorer': typeof PlannerExplorerRoute
  '/planner/mercenary': typeof PlannerMercenaryRoute
  '/planner/noble': typeof PlannerNobleRoute
  '/planner/saint': typeof PlannerSaintRoute
  '/planner/ship': typeof PlannerShipRoute
  '/database': typeof DatabaseIndexRoute
  '/database/monster': typeof DatabaseactorsMonsterRoute
  '/database/npc': typeof DatabaseactorsNpcRoute
  '/database/material': typeof DatabasecraftingMaterialRoute
  '/database/production': typeof DatabasecraftingProductionRoute
  '/database/production_book': typeof DatabasecraftingProductionbookRoute
  '/database/recipe': typeof DatabasecraftingRecipeRoute
  '/database/seal_break_help': typeof DatabaseenhancingSealbreakhelpRoute
  '/database/upgrade_crystal': typeof DatabaseenhancingUpgradecrystalRoute
  '/database/upgrade_help': typeof DatabaseenhancingUpgradehelpRoute
  '/database/upgrade_stone': typeof DatabaseenhancingUpgradestoneRoute
  '/database/essence': typeof DatabaseessenceEssenceRoute
  '/database/essence_help': typeof DatabaseessenceEssencehelpRoute
  '/database/accessory': typeof DatabaseextraEquipmentAccessoryRoute
  '/database/dress': typeof DatabaseextraEquipmentDressRoute
  '/database/hat': typeof DatabaseextraEquipmentHatRoute
  '/database/fishing_bait': typeof DatabasefishingFishingbaitRoute
  '/database/fishing_material': typeof DatabasefishingFishingmaterialRoute
  '/database/bullet': typeof DatabasemoreBulletRoute
  '/database/consumable': typeof DatabasemoreConsumableRoute
  '/database/random_box': typeof DatabasemoreRandomboxRoute
  '/database/skill_book': typeof DatabasemoreSkillbookRoute
  '/database/pet': typeof DatabasepetsPetRoute
  '/database/pet_combine_help': typeof DatabasepetsPetcombinehelpRoute
  '/database/pet_combine_stone': typeof DatabasepetsPetcombinestoneRoute
  '/database/pet_skill_stone': typeof DatabasepetsPetskillstoneRoute
  '/database/riding_pet': typeof DatabasepetsRidingpetRoute
  '/database/quest': typeof DatabasequestsQuestRoute
  '/database/quest_item': typeof DatabasequestsQuestitemRoute
  '/database/quest_scroll': typeof DatabasequestsQuestscrollRoute
  '/database/map/$code': typeof DatabaseMapCodeRoute
  '/database/monster/$code': typeof DatabaseactorsMonsterCodeRoute
  '/database/npc/$code': typeof DatabaseactorsNpcCodeRoute
  '/database/material/$code': typeof DatabasecraftingMaterialCodeRoute
  '/database/production/$code': typeof DatabasecraftingProductionCodeRoute
  '/database/production_book/$code': typeof DatabasecraftingProductionbookCodeRoute
  '/database/recipe/$code': typeof DatabasecraftingRecipeCodeRoute
  '/database/seal_break_help/$code': typeof DatabaseenhancingSealbreakhelpCodeRoute
  '/database/upgrade_crystal/$code': typeof DatabaseenhancingUpgradecrystalCodeRoute
  '/database/upgrade_help/$code': typeof DatabaseenhancingUpgradehelpCodeRoute
  '/database/upgrade_stone/$code': typeof DatabaseenhancingUpgradestoneCodeRoute
  '/database/essence/$code': typeof DatabaseessenceEssenceCodeRoute
  '/database/essence_help/$code': typeof DatabaseessenceEssencehelpCodeRoute
  '/database/accessory/$code': typeof DatabaseextraEquipmentAccessoryCodeRoute
  '/database/dress/$code': typeof DatabaseextraEquipmentDressCodeRoute
  '/database/hat/$code': typeof DatabaseextraEquipmentHatCodeRoute
  '/database/fishing_bait/$code': typeof DatabasefishingFishingbaitCodeRoute
  '/database/fishing_material/$code': typeof DatabasefishingFishingmaterialCodeRoute
  '/database/bullet/$code': typeof DatabasemoreBulletCodeRoute
  '/database/consumable/$code': typeof DatabasemoreConsumableCodeRoute
  '/database/random_box/$code': typeof DatabasemoreRandomboxCodeRoute
  '/database/skill_book/$code': typeof DatabasemoreSkillbookCodeRoute
  '/database/pet/$code': typeof DatabasepetsPetCodeRoute
  '/database/pet_combine_help/$code': typeof DatabasepetsPetcombinehelpCodeRoute
  '/database/pet_combine_stone/$code': typeof DatabasepetsPetcombinestoneCodeRoute
  '/database/pet_skill_stone/$code': typeof DatabasepetsPetskillstoneCodeRoute
  '/database/riding_pet/$code': typeof DatabasepetsRidingpetCodeRoute
  '/database/quest/$code': typeof DatabasequestsQuestCodeRoute
  '/database/quest_item/$code': typeof DatabasequestsQuestitemCodeRoute
  '/database/quest_scroll/$code': typeof DatabasequestsQuestscrollCodeRoute
  '/database/ship_anchor': typeof DatabaseshiproutesShipanchorRoute
  '/database/ship_body': typeof DatabaseshiproutesShipbodyRoute
  '/database/ship_figure': typeof DatabaseshiproutesShipfigureRoute
  '/database/ship_flag': typeof DatabaseshiproutesShipflagRoute
  '/database/ship_front': typeof DatabaseshiproutesShipfrontRoute
  '/database/ship_head_mast': typeof DatabaseshiproutesShipheadmastRoute
  '/database/ship_magic_stone': typeof DatabaseshiproutesShipmagicstoneRoute
  '/database/ship_main_mast': typeof DatabaseshiproutesShipmainmastRoute
  '/database/ship_normal_weapon': typeof DatabaseshiproutesShipnormalweaponRoute
  '/database/ship_shell': typeof DatabaseshiproutesShipshellRoute
  '/database/ship_special_weapon': typeof DatabaseshiproutesShipspecialweaponRoute
  '/database/coat': typeof DatabaseweaponsarmorarmorCoatRoute
  '/database/gauntlet': typeof DatabaseweaponsarmorarmorGauntletRoute
  '/database/pants': typeof DatabaseweaponsarmorarmorPantsRoute
  '/database/shield': typeof DatabaseweaponsarmorarmorShieldRoute
  '/database/shoes': typeof DatabaseweaponsarmorarmorShoesRoute
  '/database/cariad': typeof DatabaseweaponsarmorweaponsCariadRoute
  '/database/dagger': typeof DatabaseweaponsarmorweaponsDaggerRoute
  '/database/duals': typeof DatabaseweaponsarmorweaponsDualsRoute
  '/database/fishing_rod': typeof DatabaseweaponsarmorweaponsFishingrodRoute
  '/database/one_handed_sword': typeof DatabaseweaponsarmorweaponsOnehandedswordRoute
  '/database/rapier': typeof DatabaseweaponsarmorweaponsRapierRoute
  '/database/rifle': typeof DatabaseweaponsarmorweaponsRifleRoute
  '/database/two_handed_sword': typeof DatabaseweaponsarmorweaponsTwohandedswordRoute
  '/database/ship_anchor/$code': typeof DatabaseshiproutesShipanchorCodeRoute
  '/database/ship_body/$code': typeof DatabaseshiproutesShipbodyCodeRoute
  '/database/ship_figure/$code': typeof DatabaseshiproutesShipfigureCodeRoute
  '/database/ship_flag/$code': typeof DatabaseshiproutesShipflagCodeRoute
  '/database/ship_front/$code': typeof DatabaseshiproutesShipfrontCodeRoute
  '/database/ship_head_mast/$code': typeof DatabaseshiproutesShipheadmastCodeRoute
  '/database/ship_magic_stone/$code': typeof DatabaseshiproutesShipmagicstoneCodeRoute
  '/database/ship_main_mast/$code': typeof DatabaseshiproutesShipmainmastCodeRoute
  '/database/ship_normal_weapon/$code': typeof DatabaseshiproutesShipnormalweaponCodeRoute
  '/database/ship_shell/$code': typeof DatabaseshiproutesShipshellCodeRoute
  '/database/ship_special_weapon/$code': typeof DatabaseshiproutesShipspecialweaponCodeRoute
  '/database/coat/$code': typeof DatabaseweaponsarmorarmorCoatCodeRoute
  '/database/gauntlet/$code': typeof DatabaseweaponsarmorarmorGauntletCodeRoute
  '/database/pants/$code': typeof DatabaseweaponsarmorarmorPantsCodeRoute
  '/database/shield/$code': typeof DatabaseweaponsarmorarmorShieldCodeRoute
  '/database/shoes/$code': typeof DatabaseweaponsarmorarmorShoesCodeRoute
  '/database/cariad/$code': typeof DatabaseweaponsarmorweaponsCariadCodeRoute
  '/database/dagger/$code': typeof DatabaseweaponsarmorweaponsDaggerCodeRoute
  '/database/duals/$code': typeof DatabaseweaponsarmorweaponsDualsCodeRoute
  '/database/fishing_rod/$code': typeof DatabaseweaponsarmorweaponsFishingrodCodeRoute
  '/database/one_handed_sword/$code': typeof DatabaseweaponsarmorweaponsOnehandedswordCodeRoute
  '/database/rapier/$code': typeof DatabaseweaponsarmorweaponsRapierCodeRoute
  '/database/rifle/$code': typeof DatabaseweaponsarmorweaponsRifleCodeRoute
  '/database/two_handed_sword/$code': typeof DatabaseweaponsarmorweaponsTwohandedswordCodeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/copyright': typeof CopyrightRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/database/map': typeof DatabaseMapRoute
  '/database/tower': typeof DatabaseTowerRoute
  '/experimental/dodo-loading': typeof ExperimentalDodoLoadingRoute
  '/planner/explorer': typeof PlannerExplorerRoute
  '/planner/mercenary': typeof PlannerMercenaryRoute
  '/planner/noble': typeof PlannerNobleRoute
  '/planner/saint': typeof PlannerSaintRoute
  '/planner/ship': typeof PlannerShipRoute
  '/database/': typeof DatabaseIndexRoute
  '/database/monster': typeof DatabaseactorsMonsterRoute
  '/database/npc': typeof DatabaseactorsNpcRoute
  '/database/material': typeof DatabasecraftingMaterialRoute
  '/database/production': typeof DatabasecraftingProductionRoute
  '/database/production_book': typeof DatabasecraftingProductionbookRoute
  '/database/recipe': typeof DatabasecraftingRecipeRoute
  '/database/seal_break_help': typeof DatabaseenhancingSealbreakhelpRoute
  '/database/upgrade_crystal': typeof DatabaseenhancingUpgradecrystalRoute
  '/database/upgrade_help': typeof DatabaseenhancingUpgradehelpRoute
  '/database/upgrade_stone': typeof DatabaseenhancingUpgradestoneRoute
  '/database/essence': typeof DatabaseessenceEssenceRoute
  '/database/essence_help': typeof DatabaseessenceEssencehelpRoute
  '/database/accessory': typeof DatabaseextraEquipmentAccessoryRoute
  '/database/dress': typeof DatabaseextraEquipmentDressRoute
  '/database/hat': typeof DatabaseextraEquipmentHatRoute
  '/database/fishing_bait': typeof DatabasefishingFishingbaitRoute
  '/database/fishing_material': typeof DatabasefishingFishingmaterialRoute
  '/database/bullet': typeof DatabasemoreBulletRoute
  '/database/consumable': typeof DatabasemoreConsumableRoute
  '/database/random_box': typeof DatabasemoreRandomboxRoute
  '/database/skill_book': typeof DatabasemoreSkillbookRoute
  '/database/pet': typeof DatabasepetsPetRoute
  '/database/pet_combine_help': typeof DatabasepetsPetcombinehelpRoute
  '/database/pet_combine_stone': typeof DatabasepetsPetcombinestoneRoute
  '/database/pet_skill_stone': typeof DatabasepetsPetskillstoneRoute
  '/database/riding_pet': typeof DatabasepetsRidingpetRoute
  '/database/quest': typeof DatabasequestsQuestRoute
  '/database/quest_item': typeof DatabasequestsQuestitemRoute
  '/database/quest_scroll': typeof DatabasequestsQuestscrollRoute
  '/database/map/$code': typeof DatabaseMapCodeRoute
  '/database/monster/$code': typeof DatabaseactorsMonsterCodeRoute
  '/database/npc/$code': typeof DatabaseactorsNpcCodeRoute
  '/database/material/$code': typeof DatabasecraftingMaterialCodeRoute
  '/database/production/$code': typeof DatabasecraftingProductionCodeRoute
  '/database/production_book/$code': typeof DatabasecraftingProductionbookCodeRoute
  '/database/recipe/$code': typeof DatabasecraftingRecipeCodeRoute
  '/database/seal_break_help/$code': typeof DatabaseenhancingSealbreakhelpCodeRoute
  '/database/upgrade_crystal/$code': typeof DatabaseenhancingUpgradecrystalCodeRoute
  '/database/upgrade_help/$code': typeof DatabaseenhancingUpgradehelpCodeRoute
  '/database/upgrade_stone/$code': typeof DatabaseenhancingUpgradestoneCodeRoute
  '/database/essence/$code': typeof DatabaseessenceEssenceCodeRoute
  '/database/essence_help/$code': typeof DatabaseessenceEssencehelpCodeRoute
  '/database/accessory/$code': typeof DatabaseextraEquipmentAccessoryCodeRoute
  '/database/dress/$code': typeof DatabaseextraEquipmentDressCodeRoute
  '/database/hat/$code': typeof DatabaseextraEquipmentHatCodeRoute
  '/database/fishing_bait/$code': typeof DatabasefishingFishingbaitCodeRoute
  '/database/fishing_material/$code': typeof DatabasefishingFishingmaterialCodeRoute
  '/database/bullet/$code': typeof DatabasemoreBulletCodeRoute
  '/database/consumable/$code': typeof DatabasemoreConsumableCodeRoute
  '/database/random_box/$code': typeof DatabasemoreRandomboxCodeRoute
  '/database/skill_book/$code': typeof DatabasemoreSkillbookCodeRoute
  '/database/pet/$code': typeof DatabasepetsPetCodeRoute
  '/database/pet_combine_help/$code': typeof DatabasepetsPetcombinehelpCodeRoute
  '/database/pet_combine_stone/$code': typeof DatabasepetsPetcombinestoneCodeRoute
  '/database/pet_skill_stone/$code': typeof DatabasepetsPetskillstoneCodeRoute
  '/database/riding_pet/$code': typeof DatabasepetsRidingpetCodeRoute
  '/database/quest/$code': typeof DatabasequestsQuestCodeRoute
  '/database/quest_item/$code': typeof DatabasequestsQuestitemCodeRoute
  '/database/quest_scroll/$code': typeof DatabasequestsQuestscrollCodeRoute
  '/database/ship_anchor': typeof DatabaseshiproutesShipanchorRoute
  '/database/ship_body': typeof DatabaseshiproutesShipbodyRoute
  '/database/ship_figure': typeof DatabaseshiproutesShipfigureRoute
  '/database/ship_flag': typeof DatabaseshiproutesShipflagRoute
  '/database/ship_front': typeof DatabaseshiproutesShipfrontRoute
  '/database/ship_head_mast': typeof DatabaseshiproutesShipheadmastRoute
  '/database/ship_magic_stone': typeof DatabaseshiproutesShipmagicstoneRoute
  '/database/ship_main_mast': typeof DatabaseshiproutesShipmainmastRoute
  '/database/ship_normal_weapon': typeof DatabaseshiproutesShipnormalweaponRoute
  '/database/ship_shell': typeof DatabaseshiproutesShipshellRoute
  '/database/ship_special_weapon': typeof DatabaseshiproutesShipspecialweaponRoute
  '/database/coat': typeof DatabaseweaponsarmorarmorCoatRoute
  '/database/gauntlet': typeof DatabaseweaponsarmorarmorGauntletRoute
  '/database/pants': typeof DatabaseweaponsarmorarmorPantsRoute
  '/database/shield': typeof DatabaseweaponsarmorarmorShieldRoute
  '/database/shoes': typeof DatabaseweaponsarmorarmorShoesRoute
  '/database/cariad': typeof DatabaseweaponsarmorweaponsCariadRoute
  '/database/dagger': typeof DatabaseweaponsarmorweaponsDaggerRoute
  '/database/duals': typeof DatabaseweaponsarmorweaponsDualsRoute
  '/database/fishing_rod': typeof DatabaseweaponsarmorweaponsFishingrodRoute
  '/database/one_handed_sword': typeof DatabaseweaponsarmorweaponsOnehandedswordRoute
  '/database/rapier': typeof DatabaseweaponsarmorweaponsRapierRoute
  '/database/rifle': typeof DatabaseweaponsarmorweaponsRifleRoute
  '/database/two_handed_sword': typeof DatabaseweaponsarmorweaponsTwohandedswordRoute
  '/database/ship_anchor/$code': typeof DatabaseshiproutesShipanchorCodeRoute
  '/database/ship_body/$code': typeof DatabaseshiproutesShipbodyCodeRoute
  '/database/ship_figure/$code': typeof DatabaseshiproutesShipfigureCodeRoute
  '/database/ship_flag/$code': typeof DatabaseshiproutesShipflagCodeRoute
  '/database/ship_front/$code': typeof DatabaseshiproutesShipfrontCodeRoute
  '/database/ship_head_mast/$code': typeof DatabaseshiproutesShipheadmastCodeRoute
  '/database/ship_magic_stone/$code': typeof DatabaseshiproutesShipmagicstoneCodeRoute
  '/database/ship_main_mast/$code': typeof DatabaseshiproutesShipmainmastCodeRoute
  '/database/ship_normal_weapon/$code': typeof DatabaseshiproutesShipnormalweaponCodeRoute
  '/database/ship_shell/$code': typeof DatabaseshiproutesShipshellCodeRoute
  '/database/ship_special_weapon/$code': typeof DatabaseshiproutesShipspecialweaponCodeRoute
  '/database/coat/$code': typeof DatabaseweaponsarmorarmorCoatCodeRoute
  '/database/gauntlet/$code': typeof DatabaseweaponsarmorarmorGauntletCodeRoute
  '/database/pants/$code': typeof DatabaseweaponsarmorarmorPantsCodeRoute
  '/database/shield/$code': typeof DatabaseweaponsarmorarmorShieldCodeRoute
  '/database/shoes/$code': typeof DatabaseweaponsarmorarmorShoesCodeRoute
  '/database/cariad/$code': typeof DatabaseweaponsarmorweaponsCariadCodeRoute
  '/database/dagger/$code': typeof DatabaseweaponsarmorweaponsDaggerCodeRoute
  '/database/duals/$code': typeof DatabaseweaponsarmorweaponsDualsCodeRoute
  '/database/fishing_rod/$code': typeof DatabaseweaponsarmorweaponsFishingrodCodeRoute
  '/database/one_handed_sword/$code': typeof DatabaseweaponsarmorweaponsOnehandedswordCodeRoute
  '/database/rapier/$code': typeof DatabaseweaponsarmorweaponsRapierCodeRoute
  '/database/rifle/$code': typeof DatabaseweaponsarmorweaponsRifleCodeRoute
  '/database/two_handed_sword/$code': typeof DatabaseweaponsarmorweaponsTwohandedswordCodeRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/copyright'
    | '/privacy-policy'
    | '/database/map'
    | '/database/tower'
    | '/experimental/dodo-loading'
    | '/planner/explorer'
    | '/planner/mercenary'
    | '/planner/noble'
    | '/planner/saint'
    | '/planner/ship'
    | '/database'
    | '/database/monster'
    | '/database/npc'
    | '/database/material'
    | '/database/production'
    | '/database/production_book'
    | '/database/recipe'
    | '/database/seal_break_help'
    | '/database/upgrade_crystal'
    | '/database/upgrade_help'
    | '/database/upgrade_stone'
    | '/database/essence'
    | '/database/essence_help'
    | '/database/accessory'
    | '/database/dress'
    | '/database/hat'
    | '/database/fishing_bait'
    | '/database/fishing_material'
    | '/database/bullet'
    | '/database/consumable'
    | '/database/random_box'
    | '/database/skill_book'
    | '/database/pet'
    | '/database/pet_combine_help'
    | '/database/pet_combine_stone'
    | '/database/pet_skill_stone'
    | '/database/riding_pet'
    | '/database/quest'
    | '/database/quest_item'
    | '/database/quest_scroll'
    | '/database/map/$code'
    | '/database/monster/$code'
    | '/database/npc/$code'
    | '/database/material/$code'
    | '/database/production/$code'
    | '/database/production_book/$code'
    | '/database/recipe/$code'
    | '/database/seal_break_help/$code'
    | '/database/upgrade_crystal/$code'
    | '/database/upgrade_help/$code'
    | '/database/upgrade_stone/$code'
    | '/database/essence/$code'
    | '/database/essence_help/$code'
    | '/database/accessory/$code'
    | '/database/dress/$code'
    | '/database/hat/$code'
    | '/database/fishing_bait/$code'
    | '/database/fishing_material/$code'
    | '/database/bullet/$code'
    | '/database/consumable/$code'
    | '/database/random_box/$code'
    | '/database/skill_book/$code'
    | '/database/pet/$code'
    | '/database/pet_combine_help/$code'
    | '/database/pet_combine_stone/$code'
    | '/database/pet_skill_stone/$code'
    | '/database/riding_pet/$code'
    | '/database/quest/$code'
    | '/database/quest_item/$code'
    | '/database/quest_scroll/$code'
    | '/database/ship_anchor'
    | '/database/ship_body'
    | '/database/ship_figure'
    | '/database/ship_flag'
    | '/database/ship_front'
    | '/database/ship_head_mast'
    | '/database/ship_magic_stone'
    | '/database/ship_main_mast'
    | '/database/ship_normal_weapon'
    | '/database/ship_shell'
    | '/database/ship_special_weapon'
    | '/database/coat'
    | '/database/gauntlet'
    | '/database/pants'
    | '/database/shield'
    | '/database/shoes'
    | '/database/cariad'
    | '/database/dagger'
    | '/database/duals'
    | '/database/fishing_rod'
    | '/database/one_handed_sword'
    | '/database/rapier'
    | '/database/rifle'
    | '/database/two_handed_sword'
    | '/database/ship_anchor/$code'
    | '/database/ship_body/$code'
    | '/database/ship_figure/$code'
    | '/database/ship_flag/$code'
    | '/database/ship_front/$code'
    | '/database/ship_head_mast/$code'
    | '/database/ship_magic_stone/$code'
    | '/database/ship_main_mast/$code'
    | '/database/ship_normal_weapon/$code'
    | '/database/ship_shell/$code'
    | '/database/ship_special_weapon/$code'
    | '/database/coat/$code'
    | '/database/gauntlet/$code'
    | '/database/pants/$code'
    | '/database/shield/$code'
    | '/database/shoes/$code'
    | '/database/cariad/$code'
    | '/database/dagger/$code'
    | '/database/duals/$code'
    | '/database/fishing_rod/$code'
    | '/database/one_handed_sword/$code'
    | '/database/rapier/$code'
    | '/database/rifle/$code'
    | '/database/two_handed_sword/$code'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/copyright'
    | '/privacy-policy'
    | '/database/map'
    | '/database/tower'
    | '/experimental/dodo-loading'
    | '/planner/explorer'
    | '/planner/mercenary'
    | '/planner/noble'
    | '/planner/saint'
    | '/planner/ship'
    | '/database'
    | '/database/monster'
    | '/database/npc'
    | '/database/material'
    | '/database/production'
    | '/database/production_book'
    | '/database/recipe'
    | '/database/seal_break_help'
    | '/database/upgrade_crystal'
    | '/database/upgrade_help'
    | '/database/upgrade_stone'
    | '/database/essence'
    | '/database/essence_help'
    | '/database/accessory'
    | '/database/dress'
    | '/database/hat'
    | '/database/fishing_bait'
    | '/database/fishing_material'
    | '/database/bullet'
    | '/database/consumable'
    | '/database/random_box'
    | '/database/skill_book'
    | '/database/pet'
    | '/database/pet_combine_help'
    | '/database/pet_combine_stone'
    | '/database/pet_skill_stone'
    | '/database/riding_pet'
    | '/database/quest'
    | '/database/quest_item'
    | '/database/quest_scroll'
    | '/database/map/$code'
    | '/database/monster/$code'
    | '/database/npc/$code'
    | '/database/material/$code'
    | '/database/production/$code'
    | '/database/production_book/$code'
    | '/database/recipe/$code'
    | '/database/seal_break_help/$code'
    | '/database/upgrade_crystal/$code'
    | '/database/upgrade_help/$code'
    | '/database/upgrade_stone/$code'
    | '/database/essence/$code'
    | '/database/essence_help/$code'
    | '/database/accessory/$code'
    | '/database/dress/$code'
    | '/database/hat/$code'
    | '/database/fishing_bait/$code'
    | '/database/fishing_material/$code'
    | '/database/bullet/$code'
    | '/database/consumable/$code'
    | '/database/random_box/$code'
    | '/database/skill_book/$code'
    | '/database/pet/$code'
    | '/database/pet_combine_help/$code'
    | '/database/pet_combine_stone/$code'
    | '/database/pet_skill_stone/$code'
    | '/database/riding_pet/$code'
    | '/database/quest/$code'
    | '/database/quest_item/$code'
    | '/database/quest_scroll/$code'
    | '/database/ship_anchor'
    | '/database/ship_body'
    | '/database/ship_figure'
    | '/database/ship_flag'
    | '/database/ship_front'
    | '/database/ship_head_mast'
    | '/database/ship_magic_stone'
    | '/database/ship_main_mast'
    | '/database/ship_normal_weapon'
    | '/database/ship_shell'
    | '/database/ship_special_weapon'
    | '/database/coat'
    | '/database/gauntlet'
    | '/database/pants'
    | '/database/shield'
    | '/database/shoes'
    | '/database/cariad'
    | '/database/dagger'
    | '/database/duals'
    | '/database/fishing_rod'
    | '/database/one_handed_sword'
    | '/database/rapier'
    | '/database/rifle'
    | '/database/two_handed_sword'
    | '/database/ship_anchor/$code'
    | '/database/ship_body/$code'
    | '/database/ship_figure/$code'
    | '/database/ship_flag/$code'
    | '/database/ship_front/$code'
    | '/database/ship_head_mast/$code'
    | '/database/ship_magic_stone/$code'
    | '/database/ship_main_mast/$code'
    | '/database/ship_normal_weapon/$code'
    | '/database/ship_shell/$code'
    | '/database/ship_special_weapon/$code'
    | '/database/coat/$code'
    | '/database/gauntlet/$code'
    | '/database/pants/$code'
    | '/database/shield/$code'
    | '/database/shoes/$code'
    | '/database/cariad/$code'
    | '/database/dagger/$code'
    | '/database/duals/$code'
    | '/database/fishing_rod/$code'
    | '/database/one_handed_sword/$code'
    | '/database/rapier/$code'
    | '/database/rifle/$code'
    | '/database/two_handed_sword/$code'
  id:
    | '__root__'
    | '/'
    | '/copyright'
    | '/privacy-policy'
    | '/database/map'
    | '/database/tower'
    | '/experimental/dodo-loading'
    | '/planner/explorer'
    | '/planner/mercenary'
    | '/planner/noble'
    | '/planner/saint'
    | '/planner/ship'
    | '/database/'
    | '/database/monster'
    | '/database/npc'
    | '/database/material'
    | '/database/production'
    | '/database/production_book'
    | '/database/recipe'
    | '/database/seal_break_help'
    | '/database/upgrade_crystal'
    | '/database/upgrade_help'
    | '/database/upgrade_stone'
    | '/database/essence'
    | '/database/essence_help'
    | '/database/accessory'
    | '/database/dress'
    | '/database/hat'
    | '/database/fishing_bait'
    | '/database/fishing_material'
    | '/database/bullet'
    | '/database/consumable'
    | '/database/random_box'
    | '/database/skill_book'
    | '/database/pet'
    | '/database/pet_combine_help'
    | '/database/pet_combine_stone'
    | '/database/pet_skill_stone'
    | '/database/riding_pet'
    | '/database/quest'
    | '/database/quest_item'
    | '/database/quest_scroll'
    | '/database/map/$code'
    | '/database/monster/$code'
    | '/database/npc/$code'
    | '/database/material/$code'
    | '/database/production/$code'
    | '/database/production_book/$code'
    | '/database/recipe/$code'
    | '/database/seal_break_help/$code'
    | '/database/upgrade_crystal/$code'
    | '/database/upgrade_help/$code'
    | '/database/upgrade_stone/$code'
    | '/database/essence/$code'
    | '/database/essence_help/$code'
    | '/database/accessory/$code'
    | '/database/dress/$code'
    | '/database/hat/$code'
    | '/database/fishing_bait/$code'
    | '/database/fishing_material/$code'
    | '/database/bullet/$code'
    | '/database/consumable/$code'
    | '/database/random_box/$code'
    | '/database/skill_book/$code'
    | '/database/pet/$code'
    | '/database/pet_combine_help/$code'
    | '/database/pet_combine_stone/$code'
    | '/database/pet_skill_stone/$code'
    | '/database/riding_pet/$code'
    | '/database/quest/$code'
    | '/database/quest_item/$code'
    | '/database/quest_scroll/$code'
    | '/database/ship_anchor'
    | '/database/ship_body'
    | '/database/ship_figure'
    | '/database/ship_flag'
    | '/database/ship_front'
    | '/database/ship_head_mast'
    | '/database/ship_magic_stone'
    | '/database/ship_main_mast'
    | '/database/ship_normal_weapon'
    | '/database/ship_shell'
    | '/database/ship_special_weapon'
    | '/database/coat'
    | '/database/gauntlet'
    | '/database/pants'
    | '/database/shield'
    | '/database/shoes'
    | '/database/cariad'
    | '/database/dagger'
    | '/database/duals'
    | '/database/fishing_rod'
    | '/database/one_handed_sword'
    | '/database/rapier'
    | '/database/rifle'
    | '/database/two_handed_sword'
    | '/database/ship_anchor/$code'
    | '/database/ship_body/$code'
    | '/database/ship_figure/$code'
    | '/database/ship_flag/$code'
    | '/database/ship_front/$code'
    | '/database/ship_head_mast/$code'
    | '/database/ship_magic_stone/$code'
    | '/database/ship_main_mast/$code'
    | '/database/ship_normal_weapon/$code'
    | '/database/ship_shell/$code'
    | '/database/ship_special_weapon/$code'
    | '/database/coat/$code'
    | '/database/gauntlet/$code'
    | '/database/pants/$code'
    | '/database/shield/$code'
    | '/database/shoes/$code'
    | '/database/cariad/$code'
    | '/database/dagger/$code'
    | '/database/duals/$code'
    | '/database/fishing_rod/$code'
    | '/database/one_handed_sword/$code'
    | '/database/rapier/$code'
    | '/database/rifle/$code'
    | '/database/two_handed_sword/$code'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CopyrightRoute: typeof CopyrightRoute
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute
  DatabaseMapRoute: typeof DatabaseMapRoute
  DatabaseTowerRoute: typeof DatabaseTowerRoute
  ExperimentalDodoLoadingRoute: typeof ExperimentalDodoLoadingRoute
  PlannerExplorerRoute: typeof PlannerExplorerRoute
  PlannerMercenaryRoute: typeof PlannerMercenaryRoute
  PlannerNobleRoute: typeof PlannerNobleRoute
  PlannerSaintRoute: typeof PlannerSaintRoute
  PlannerShipRoute: typeof PlannerShipRoute
  DatabaseIndexRoute: typeof DatabaseIndexRoute
  DatabaseactorsMonsterRoute: typeof DatabaseactorsMonsterRoute
  DatabaseactorsNpcRoute: typeof DatabaseactorsNpcRoute
  DatabasecraftingMaterialRoute: typeof DatabasecraftingMaterialRoute
  DatabasecraftingProductionRoute: typeof DatabasecraftingProductionRoute
  DatabasecraftingProductionbookRoute: typeof DatabasecraftingProductionbookRoute
  DatabasecraftingRecipeRoute: typeof DatabasecraftingRecipeRoute
  DatabaseenhancingSealbreakhelpRoute: typeof DatabaseenhancingSealbreakhelpRoute
  DatabaseenhancingUpgradecrystalRoute: typeof DatabaseenhancingUpgradecrystalRoute
  DatabaseenhancingUpgradehelpRoute: typeof DatabaseenhancingUpgradehelpRoute
  DatabaseenhancingUpgradestoneRoute: typeof DatabaseenhancingUpgradestoneRoute
  DatabaseessenceEssenceRoute: typeof DatabaseessenceEssenceRoute
  DatabaseessenceEssencehelpRoute: typeof DatabaseessenceEssencehelpRoute
  DatabaseextraEquipmentAccessoryRoute: typeof DatabaseextraEquipmentAccessoryRoute
  DatabaseextraEquipmentDressRoute: typeof DatabaseextraEquipmentDressRoute
  DatabaseextraEquipmentHatRoute: typeof DatabaseextraEquipmentHatRoute
  DatabasefishingFishingbaitRoute: typeof DatabasefishingFishingbaitRoute
  DatabasefishingFishingmaterialRoute: typeof DatabasefishingFishingmaterialRoute
  DatabasemoreBulletRoute: typeof DatabasemoreBulletRoute
  DatabasemoreConsumableRoute: typeof DatabasemoreConsumableRoute
  DatabasemoreRandomboxRoute: typeof DatabasemoreRandomboxRoute
  DatabasemoreSkillbookRoute: typeof DatabasemoreSkillbookRoute
  DatabasepetsPetRoute: typeof DatabasepetsPetRoute
  DatabasepetsPetcombinehelpRoute: typeof DatabasepetsPetcombinehelpRoute
  DatabasepetsPetcombinestoneRoute: typeof DatabasepetsPetcombinestoneRoute
  DatabasepetsPetskillstoneRoute: typeof DatabasepetsPetskillstoneRoute
  DatabasepetsRidingpetRoute: typeof DatabasepetsRidingpetRoute
  DatabasequestsQuestRoute: typeof DatabasequestsQuestRoute
  DatabasequestsQuestitemRoute: typeof DatabasequestsQuestitemRoute
  DatabasequestsQuestscrollRoute: typeof DatabasequestsQuestscrollRoute
  DatabaseMapCodeRoute: typeof DatabaseMapCodeRoute
  DatabaseactorsMonsterCodeRoute: typeof DatabaseactorsMonsterCodeRoute
  DatabaseactorsNpcCodeRoute: typeof DatabaseactorsNpcCodeRoute
  DatabasecraftingMaterialCodeRoute: typeof DatabasecraftingMaterialCodeRoute
  DatabasecraftingProductionCodeRoute: typeof DatabasecraftingProductionCodeRoute
  DatabasecraftingProductionbookCodeRoute: typeof DatabasecraftingProductionbookCodeRoute
  DatabasecraftingRecipeCodeRoute: typeof DatabasecraftingRecipeCodeRoute
  DatabaseenhancingSealbreakhelpCodeRoute: typeof DatabaseenhancingSealbreakhelpCodeRoute
  DatabaseenhancingUpgradecrystalCodeRoute: typeof DatabaseenhancingUpgradecrystalCodeRoute
  DatabaseenhancingUpgradehelpCodeRoute: typeof DatabaseenhancingUpgradehelpCodeRoute
  DatabaseenhancingUpgradestoneCodeRoute: typeof DatabaseenhancingUpgradestoneCodeRoute
  DatabaseessenceEssenceCodeRoute: typeof DatabaseessenceEssenceCodeRoute
  DatabaseessenceEssencehelpCodeRoute: typeof DatabaseessenceEssencehelpCodeRoute
  DatabaseextraEquipmentAccessoryCodeRoute: typeof DatabaseextraEquipmentAccessoryCodeRoute
  DatabaseextraEquipmentDressCodeRoute: typeof DatabaseextraEquipmentDressCodeRoute
  DatabaseextraEquipmentHatCodeRoute: typeof DatabaseextraEquipmentHatCodeRoute
  DatabasefishingFishingbaitCodeRoute: typeof DatabasefishingFishingbaitCodeRoute
  DatabasefishingFishingmaterialCodeRoute: typeof DatabasefishingFishingmaterialCodeRoute
  DatabasemoreBulletCodeRoute: typeof DatabasemoreBulletCodeRoute
  DatabasemoreConsumableCodeRoute: typeof DatabasemoreConsumableCodeRoute
  DatabasemoreRandomboxCodeRoute: typeof DatabasemoreRandomboxCodeRoute
  DatabasemoreSkillbookCodeRoute: typeof DatabasemoreSkillbookCodeRoute
  DatabasepetsPetCodeRoute: typeof DatabasepetsPetCodeRoute
  DatabasepetsPetcombinehelpCodeRoute: typeof DatabasepetsPetcombinehelpCodeRoute
  DatabasepetsPetcombinestoneCodeRoute: typeof DatabasepetsPetcombinestoneCodeRoute
  DatabasepetsPetskillstoneCodeRoute: typeof DatabasepetsPetskillstoneCodeRoute
  DatabasepetsRidingpetCodeRoute: typeof DatabasepetsRidingpetCodeRoute
  DatabasequestsQuestCodeRoute: typeof DatabasequestsQuestCodeRoute
  DatabasequestsQuestitemCodeRoute: typeof DatabasequestsQuestitemCodeRoute
  DatabasequestsQuestscrollCodeRoute: typeof DatabasequestsQuestscrollCodeRoute
  DatabaseshiproutesShipanchorRoute: typeof DatabaseshiproutesShipanchorRoute
  DatabaseshiproutesShipbodyRoute: typeof DatabaseshiproutesShipbodyRoute
  DatabaseshiproutesShipfigureRoute: typeof DatabaseshiproutesShipfigureRoute
  DatabaseshiproutesShipflagRoute: typeof DatabaseshiproutesShipflagRoute
  DatabaseshiproutesShipfrontRoute: typeof DatabaseshiproutesShipfrontRoute
  DatabaseshiproutesShipheadmastRoute: typeof DatabaseshiproutesShipheadmastRoute
  DatabaseshiproutesShipmagicstoneRoute: typeof DatabaseshiproutesShipmagicstoneRoute
  DatabaseshiproutesShipmainmastRoute: typeof DatabaseshiproutesShipmainmastRoute
  DatabaseshiproutesShipnormalweaponRoute: typeof DatabaseshiproutesShipnormalweaponRoute
  DatabaseshiproutesShipshellRoute: typeof DatabaseshiproutesShipshellRoute
  DatabaseshiproutesShipspecialweaponRoute: typeof DatabaseshiproutesShipspecialweaponRoute
  DatabaseweaponsarmorarmorCoatRoute: typeof DatabaseweaponsarmorarmorCoatRoute
  DatabaseweaponsarmorarmorGauntletRoute: typeof DatabaseweaponsarmorarmorGauntletRoute
  DatabaseweaponsarmorarmorPantsRoute: typeof DatabaseweaponsarmorarmorPantsRoute
  DatabaseweaponsarmorarmorShieldRoute: typeof DatabaseweaponsarmorarmorShieldRoute
  DatabaseweaponsarmorarmorShoesRoute: typeof DatabaseweaponsarmorarmorShoesRoute
  DatabaseweaponsarmorweaponsCariadRoute: typeof DatabaseweaponsarmorweaponsCariadRoute
  DatabaseweaponsarmorweaponsDaggerRoute: typeof DatabaseweaponsarmorweaponsDaggerRoute
  DatabaseweaponsarmorweaponsDualsRoute: typeof DatabaseweaponsarmorweaponsDualsRoute
  DatabaseweaponsarmorweaponsFishingrodRoute: typeof DatabaseweaponsarmorweaponsFishingrodRoute
  DatabaseweaponsarmorweaponsOnehandedswordRoute: typeof DatabaseweaponsarmorweaponsOnehandedswordRoute
  DatabaseweaponsarmorweaponsRapierRoute: typeof DatabaseweaponsarmorweaponsRapierRoute
  DatabaseweaponsarmorweaponsRifleRoute: typeof DatabaseweaponsarmorweaponsRifleRoute
  DatabaseweaponsarmorweaponsTwohandedswordRoute: typeof DatabaseweaponsarmorweaponsTwohandedswordRoute
  DatabaseshiproutesShipanchorCodeRoute: typeof DatabaseshiproutesShipanchorCodeRoute
  DatabaseshiproutesShipbodyCodeRoute: typeof DatabaseshiproutesShipbodyCodeRoute
  DatabaseshiproutesShipfigureCodeRoute: typeof DatabaseshiproutesShipfigureCodeRoute
  DatabaseshiproutesShipflagCodeRoute: typeof DatabaseshiproutesShipflagCodeRoute
  DatabaseshiproutesShipfrontCodeRoute: typeof DatabaseshiproutesShipfrontCodeRoute
  DatabaseshiproutesShipheadmastCodeRoute: typeof DatabaseshiproutesShipheadmastCodeRoute
  DatabaseshiproutesShipmagicstoneCodeRoute: typeof DatabaseshiproutesShipmagicstoneCodeRoute
  DatabaseshiproutesShipmainmastCodeRoute: typeof DatabaseshiproutesShipmainmastCodeRoute
  DatabaseshiproutesShipnormalweaponCodeRoute: typeof DatabaseshiproutesShipnormalweaponCodeRoute
  DatabaseshiproutesShipshellCodeRoute: typeof DatabaseshiproutesShipshellCodeRoute
  DatabaseshiproutesShipspecialweaponCodeRoute: typeof DatabaseshiproutesShipspecialweaponCodeRoute
  DatabaseweaponsarmorarmorCoatCodeRoute: typeof DatabaseweaponsarmorarmorCoatCodeRoute
  DatabaseweaponsarmorarmorGauntletCodeRoute: typeof DatabaseweaponsarmorarmorGauntletCodeRoute
  DatabaseweaponsarmorarmorPantsCodeRoute: typeof DatabaseweaponsarmorarmorPantsCodeRoute
  DatabaseweaponsarmorarmorShieldCodeRoute: typeof DatabaseweaponsarmorarmorShieldCodeRoute
  DatabaseweaponsarmorarmorShoesCodeRoute: typeof DatabaseweaponsarmorarmorShoesCodeRoute
  DatabaseweaponsarmorweaponsCariadCodeRoute: typeof DatabaseweaponsarmorweaponsCariadCodeRoute
  DatabaseweaponsarmorweaponsDaggerCodeRoute: typeof DatabaseweaponsarmorweaponsDaggerCodeRoute
  DatabaseweaponsarmorweaponsDualsCodeRoute: typeof DatabaseweaponsarmorweaponsDualsCodeRoute
  DatabaseweaponsarmorweaponsFishingrodCodeRoute: typeof DatabaseweaponsarmorweaponsFishingrodCodeRoute
  DatabaseweaponsarmorweaponsOnehandedswordCodeRoute: typeof DatabaseweaponsarmorweaponsOnehandedswordCodeRoute
  DatabaseweaponsarmorweaponsRapierCodeRoute: typeof DatabaseweaponsarmorweaponsRapierCodeRoute
  DatabaseweaponsarmorweaponsRifleCodeRoute: typeof DatabaseweaponsarmorweaponsRifleCodeRoute
  DatabaseweaponsarmorweaponsTwohandedswordCodeRoute: typeof DatabaseweaponsarmorweaponsTwohandedswordCodeRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CopyrightRoute: CopyrightRoute,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
  DatabaseMapRoute: DatabaseMapRoute,
  DatabaseTowerRoute: DatabaseTowerRoute,
  ExperimentalDodoLoadingRoute: ExperimentalDodoLoadingRoute,
  PlannerExplorerRoute: PlannerExplorerRoute,
  PlannerMercenaryRoute: PlannerMercenaryRoute,
  PlannerNobleRoute: PlannerNobleRoute,
  PlannerSaintRoute: PlannerSaintRoute,
  PlannerShipRoute: PlannerShipRoute,
  DatabaseIndexRoute: DatabaseIndexRoute,
  DatabaseactorsMonsterRoute: DatabaseactorsMonsterRoute,
  DatabaseactorsNpcRoute: DatabaseactorsNpcRoute,
  DatabasecraftingMaterialRoute: DatabasecraftingMaterialRoute,
  DatabasecraftingProductionRoute: DatabasecraftingProductionRoute,
  DatabasecraftingProductionbookRoute: DatabasecraftingProductionbookRoute,
  DatabasecraftingRecipeRoute: DatabasecraftingRecipeRoute,
  DatabaseenhancingSealbreakhelpRoute: DatabaseenhancingSealbreakhelpRoute,
  DatabaseenhancingUpgradecrystalRoute: DatabaseenhancingUpgradecrystalRoute,
  DatabaseenhancingUpgradehelpRoute: DatabaseenhancingUpgradehelpRoute,
  DatabaseenhancingUpgradestoneRoute: DatabaseenhancingUpgradestoneRoute,
  DatabaseessenceEssenceRoute: DatabaseessenceEssenceRoute,
  DatabaseessenceEssencehelpRoute: DatabaseessenceEssencehelpRoute,
  DatabaseextraEquipmentAccessoryRoute: DatabaseextraEquipmentAccessoryRoute,
  DatabaseextraEquipmentDressRoute: DatabaseextraEquipmentDressRoute,
  DatabaseextraEquipmentHatRoute: DatabaseextraEquipmentHatRoute,
  DatabasefishingFishingbaitRoute: DatabasefishingFishingbaitRoute,
  DatabasefishingFishingmaterialRoute: DatabasefishingFishingmaterialRoute,
  DatabasemoreBulletRoute: DatabasemoreBulletRoute,
  DatabasemoreConsumableRoute: DatabasemoreConsumableRoute,
  DatabasemoreRandomboxRoute: DatabasemoreRandomboxRoute,
  DatabasemoreSkillbookRoute: DatabasemoreSkillbookRoute,
  DatabasepetsPetRoute: DatabasepetsPetRoute,
  DatabasepetsPetcombinehelpRoute: DatabasepetsPetcombinehelpRoute,
  DatabasepetsPetcombinestoneRoute: DatabasepetsPetcombinestoneRoute,
  DatabasepetsPetskillstoneRoute: DatabasepetsPetskillstoneRoute,
  DatabasepetsRidingpetRoute: DatabasepetsRidingpetRoute,
  DatabasequestsQuestRoute: DatabasequestsQuestRoute,
  DatabasequestsQuestitemRoute: DatabasequestsQuestitemRoute,
  DatabasequestsQuestscrollRoute: DatabasequestsQuestscrollRoute,
  DatabaseMapCodeRoute: DatabaseMapCodeRoute,
  DatabaseactorsMonsterCodeRoute: DatabaseactorsMonsterCodeRoute,
  DatabaseactorsNpcCodeRoute: DatabaseactorsNpcCodeRoute,
  DatabasecraftingMaterialCodeRoute: DatabasecraftingMaterialCodeRoute,
  DatabasecraftingProductionCodeRoute: DatabasecraftingProductionCodeRoute,
  DatabasecraftingProductionbookCodeRoute:
    DatabasecraftingProductionbookCodeRoute,
  DatabasecraftingRecipeCodeRoute: DatabasecraftingRecipeCodeRoute,
  DatabaseenhancingSealbreakhelpCodeRoute:
    DatabaseenhancingSealbreakhelpCodeRoute,
  DatabaseenhancingUpgradecrystalCodeRoute:
    DatabaseenhancingUpgradecrystalCodeRoute,
  DatabaseenhancingUpgradehelpCodeRoute: DatabaseenhancingUpgradehelpCodeRoute,
  DatabaseenhancingUpgradestoneCodeRoute:
    DatabaseenhancingUpgradestoneCodeRoute,
  DatabaseessenceEssenceCodeRoute: DatabaseessenceEssenceCodeRoute,
  DatabaseessenceEssencehelpCodeRoute: DatabaseessenceEssencehelpCodeRoute,
  DatabaseextraEquipmentAccessoryCodeRoute:
    DatabaseextraEquipmentAccessoryCodeRoute,
  DatabaseextraEquipmentDressCodeRoute: DatabaseextraEquipmentDressCodeRoute,
  DatabaseextraEquipmentHatCodeRoute: DatabaseextraEquipmentHatCodeRoute,
  DatabasefishingFishingbaitCodeRoute: DatabasefishingFishingbaitCodeRoute,
  DatabasefishingFishingmaterialCodeRoute:
    DatabasefishingFishingmaterialCodeRoute,
  DatabasemoreBulletCodeRoute: DatabasemoreBulletCodeRoute,
  DatabasemoreConsumableCodeRoute: DatabasemoreConsumableCodeRoute,
  DatabasemoreRandomboxCodeRoute: DatabasemoreRandomboxCodeRoute,
  DatabasemoreSkillbookCodeRoute: DatabasemoreSkillbookCodeRoute,
  DatabasepetsPetCodeRoute: DatabasepetsPetCodeRoute,
  DatabasepetsPetcombinehelpCodeRoute: DatabasepetsPetcombinehelpCodeRoute,
  DatabasepetsPetcombinestoneCodeRoute: DatabasepetsPetcombinestoneCodeRoute,
  DatabasepetsPetskillstoneCodeRoute: DatabasepetsPetskillstoneCodeRoute,
  DatabasepetsRidingpetCodeRoute: DatabasepetsRidingpetCodeRoute,
  DatabasequestsQuestCodeRoute: DatabasequestsQuestCodeRoute,
  DatabasequestsQuestitemCodeRoute: DatabasequestsQuestitemCodeRoute,
  DatabasequestsQuestscrollCodeRoute: DatabasequestsQuestscrollCodeRoute,
  DatabaseshiproutesShipanchorRoute: DatabaseshiproutesShipanchorRoute,
  DatabaseshiproutesShipbodyRoute: DatabaseshiproutesShipbodyRoute,
  DatabaseshiproutesShipfigureRoute: DatabaseshiproutesShipfigureRoute,
  DatabaseshiproutesShipflagRoute: DatabaseshiproutesShipflagRoute,
  DatabaseshiproutesShipfrontRoute: DatabaseshiproutesShipfrontRoute,
  DatabaseshiproutesShipheadmastRoute: DatabaseshiproutesShipheadmastRoute,
  DatabaseshiproutesShipmagicstoneRoute: DatabaseshiproutesShipmagicstoneRoute,
  DatabaseshiproutesShipmainmastRoute: DatabaseshiproutesShipmainmastRoute,
  DatabaseshiproutesShipnormalweaponRoute:
    DatabaseshiproutesShipnormalweaponRoute,
  DatabaseshiproutesShipshellRoute: DatabaseshiproutesShipshellRoute,
  DatabaseshiproutesShipspecialweaponRoute:
    DatabaseshiproutesShipspecialweaponRoute,
  DatabaseweaponsarmorarmorCoatRoute: DatabaseweaponsarmorarmorCoatRoute,
  DatabaseweaponsarmorarmorGauntletRoute:
    DatabaseweaponsarmorarmorGauntletRoute,
  DatabaseweaponsarmorarmorPantsRoute: DatabaseweaponsarmorarmorPantsRoute,
  DatabaseweaponsarmorarmorShieldRoute: DatabaseweaponsarmorarmorShieldRoute,
  DatabaseweaponsarmorarmorShoesRoute: DatabaseweaponsarmorarmorShoesRoute,
  DatabaseweaponsarmorweaponsCariadRoute:
    DatabaseweaponsarmorweaponsCariadRoute,
  DatabaseweaponsarmorweaponsDaggerRoute:
    DatabaseweaponsarmorweaponsDaggerRoute,
  DatabaseweaponsarmorweaponsDualsRoute: DatabaseweaponsarmorweaponsDualsRoute,
  DatabaseweaponsarmorweaponsFishingrodRoute:
    DatabaseweaponsarmorweaponsFishingrodRoute,
  DatabaseweaponsarmorweaponsOnehandedswordRoute:
    DatabaseweaponsarmorweaponsOnehandedswordRoute,
  DatabaseweaponsarmorweaponsRapierRoute:
    DatabaseweaponsarmorweaponsRapierRoute,
  DatabaseweaponsarmorweaponsRifleRoute: DatabaseweaponsarmorweaponsRifleRoute,
  DatabaseweaponsarmorweaponsTwohandedswordRoute:
    DatabaseweaponsarmorweaponsTwohandedswordRoute,
  DatabaseshiproutesShipanchorCodeRoute: DatabaseshiproutesShipanchorCodeRoute,
  DatabaseshiproutesShipbodyCodeRoute: DatabaseshiproutesShipbodyCodeRoute,
  DatabaseshiproutesShipfigureCodeRoute: DatabaseshiproutesShipfigureCodeRoute,
  DatabaseshiproutesShipflagCodeRoute: DatabaseshiproutesShipflagCodeRoute,
  DatabaseshiproutesShipfrontCodeRoute: DatabaseshiproutesShipfrontCodeRoute,
  DatabaseshiproutesShipheadmastCodeRoute:
    DatabaseshiproutesShipheadmastCodeRoute,
  DatabaseshiproutesShipmagicstoneCodeRoute:
    DatabaseshiproutesShipmagicstoneCodeRoute,
  DatabaseshiproutesShipmainmastCodeRoute:
    DatabaseshiproutesShipmainmastCodeRoute,
  DatabaseshiproutesShipnormalweaponCodeRoute:
    DatabaseshiproutesShipnormalweaponCodeRoute,
  DatabaseshiproutesShipshellCodeRoute: DatabaseshiproutesShipshellCodeRoute,
  DatabaseshiproutesShipspecialweaponCodeRoute:
    DatabaseshiproutesShipspecialweaponCodeRoute,
  DatabaseweaponsarmorarmorCoatCodeRoute:
    DatabaseweaponsarmorarmorCoatCodeRoute,
  DatabaseweaponsarmorarmorGauntletCodeRoute:
    DatabaseweaponsarmorarmorGauntletCodeRoute,
  DatabaseweaponsarmorarmorPantsCodeRoute:
    DatabaseweaponsarmorarmorPantsCodeRoute,
  DatabaseweaponsarmorarmorShieldCodeRoute:
    DatabaseweaponsarmorarmorShieldCodeRoute,
  DatabaseweaponsarmorarmorShoesCodeRoute:
    DatabaseweaponsarmorarmorShoesCodeRoute,
  DatabaseweaponsarmorweaponsCariadCodeRoute:
    DatabaseweaponsarmorweaponsCariadCodeRoute,
  DatabaseweaponsarmorweaponsDaggerCodeRoute:
    DatabaseweaponsarmorweaponsDaggerCodeRoute,
  DatabaseweaponsarmorweaponsDualsCodeRoute:
    DatabaseweaponsarmorweaponsDualsCodeRoute,
  DatabaseweaponsarmorweaponsFishingrodCodeRoute:
    DatabaseweaponsarmorweaponsFishingrodCodeRoute,
  DatabaseweaponsarmorweaponsOnehandedswordCodeRoute:
    DatabaseweaponsarmorweaponsOnehandedswordCodeRoute,
  DatabaseweaponsarmorweaponsRapierCodeRoute:
    DatabaseweaponsarmorweaponsRapierCodeRoute,
  DatabaseweaponsarmorweaponsRifleCodeRoute:
    DatabaseweaponsarmorweaponsRifleCodeRoute,
  DatabaseweaponsarmorweaponsTwohandedswordCodeRoute:
    DatabaseweaponsarmorweaponsTwohandedswordCodeRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/copyright",
        "/privacy-policy",
        "/database/map",
        "/database/tower",
        "/experimental/dodo-loading",
        "/planner/explorer",
        "/planner/mercenary",
        "/planner/noble",
        "/planner/saint",
        "/planner/ship",
        "/database/",
        "/database/monster",
        "/database/npc",
        "/database/material",
        "/database/production",
        "/database/production_book",
        "/database/recipe",
        "/database/seal_break_help",
        "/database/upgrade_crystal",
        "/database/upgrade_help",
        "/database/upgrade_stone",
        "/database/essence",
        "/database/essence_help",
        "/database/accessory",
        "/database/dress",
        "/database/hat",
        "/database/fishing_bait",
        "/database/fishing_material",
        "/database/bullet",
        "/database/consumable",
        "/database/random_box",
        "/database/skill_book",
        "/database/pet",
        "/database/pet_combine_help",
        "/database/pet_combine_stone",
        "/database/pet_skill_stone",
        "/database/riding_pet",
        "/database/quest",
        "/database/quest_item",
        "/database/quest_scroll",
        "/database/map/$code",
        "/database/monster/$code",
        "/database/npc/$code",
        "/database/material/$code",
        "/database/production/$code",
        "/database/production_book/$code",
        "/database/recipe/$code",
        "/database/seal_break_help/$code",
        "/database/upgrade_crystal/$code",
        "/database/upgrade_help/$code",
        "/database/upgrade_stone/$code",
        "/database/essence/$code",
        "/database/essence_help/$code",
        "/database/accessory/$code",
        "/database/dress/$code",
        "/database/hat/$code",
        "/database/fishing_bait/$code",
        "/database/fishing_material/$code",
        "/database/bullet/$code",
        "/database/consumable/$code",
        "/database/random_box/$code",
        "/database/skill_book/$code",
        "/database/pet/$code",
        "/database/pet_combine_help/$code",
        "/database/pet_combine_stone/$code",
        "/database/pet_skill_stone/$code",
        "/database/riding_pet/$code",
        "/database/quest/$code",
        "/database/quest_item/$code",
        "/database/quest_scroll/$code",
        "/database/ship_anchor",
        "/database/ship_body",
        "/database/ship_figure",
        "/database/ship_flag",
        "/database/ship_front",
        "/database/ship_head_mast",
        "/database/ship_magic_stone",
        "/database/ship_main_mast",
        "/database/ship_normal_weapon",
        "/database/ship_shell",
        "/database/ship_special_weapon",
        "/database/coat",
        "/database/gauntlet",
        "/database/pants",
        "/database/shield",
        "/database/shoes",
        "/database/cariad",
        "/database/dagger",
        "/database/duals",
        "/database/fishing_rod",
        "/database/one_handed_sword",
        "/database/rapier",
        "/database/rifle",
        "/database/two_handed_sword",
        "/database/ship_anchor/$code",
        "/database/ship_body/$code",
        "/database/ship_figure/$code",
        "/database/ship_flag/$code",
        "/database/ship_front/$code",
        "/database/ship_head_mast/$code",
        "/database/ship_magic_stone/$code",
        "/database/ship_main_mast/$code",
        "/database/ship_normal_weapon/$code",
        "/database/ship_shell/$code",
        "/database/ship_special_weapon/$code",
        "/database/coat/$code",
        "/database/gauntlet/$code",
        "/database/pants/$code",
        "/database/shield/$code",
        "/database/shoes/$code",
        "/database/cariad/$code",
        "/database/dagger/$code",
        "/database/duals/$code",
        "/database/fishing_rod/$code",
        "/database/one_handed_sword/$code",
        "/database/rapier/$code",
        "/database/rifle/$code",
        "/database/two_handed_sword/$code"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/copyright": {
      "filePath": "copyright.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.tsx"
    },
    "/database/map": {
      "filePath": "database/map.tsx"
    },
    "/database/tower": {
      "filePath": "database/tower.tsx"
    },
    "/experimental/dodo-loading": {
      "filePath": "experimental/dodo-loading.tsx"
    },
    "/planner/explorer": {
      "filePath": "planner/explorer.tsx"
    },
    "/planner/mercenary": {
      "filePath": "planner/mercenary.tsx"
    },
    "/planner/noble": {
      "filePath": "planner/noble.tsx"
    },
    "/planner/saint": {
      "filePath": "planner/saint.tsx"
    },
    "/planner/ship": {
      "filePath": "planner/ship.tsx"
    },
    "/database/": {
      "filePath": "database/index.tsx"
    },
    "/database/monster": {
      "filePath": "database/(actors)/monster.tsx"
    },
    "/database/npc": {
      "filePath": "database/(actors)/npc.tsx"
    },
    "/database/material": {
      "filePath": "database/(crafting)/material.tsx"
    },
    "/database/production": {
      "filePath": "database/(crafting)/production.tsx"
    },
    "/database/production_book": {
      "filePath": "database/(crafting)/production_book.tsx"
    },
    "/database/recipe": {
      "filePath": "database/(crafting)/recipe.tsx"
    },
    "/database/seal_break_help": {
      "filePath": "database/(enhancing)/seal_break_help.tsx"
    },
    "/database/upgrade_crystal": {
      "filePath": "database/(enhancing)/upgrade_crystal.tsx"
    },
    "/database/upgrade_help": {
      "filePath": "database/(enhancing)/upgrade_help.tsx"
    },
    "/database/upgrade_stone": {
      "filePath": "database/(enhancing)/upgrade_stone.tsx"
    },
    "/database/essence": {
      "filePath": "database/(essence)/essence.tsx"
    },
    "/database/essence_help": {
      "filePath": "database/(essence)/essence_help.tsx"
    },
    "/database/accessory": {
      "filePath": "database/(extra-equipment)/accessory.tsx"
    },
    "/database/dress": {
      "filePath": "database/(extra-equipment)/dress.tsx"
    },
    "/database/hat": {
      "filePath": "database/(extra-equipment)/hat.tsx"
    },
    "/database/fishing_bait": {
      "filePath": "database/(fishing)/fishing_bait.tsx"
    },
    "/database/fishing_material": {
      "filePath": "database/(fishing)/fishing_material.tsx"
    },
    "/database/bullet": {
      "filePath": "database/(more)/bullet.tsx"
    },
    "/database/consumable": {
      "filePath": "database/(more)/consumable.tsx"
    },
    "/database/random_box": {
      "filePath": "database/(more)/random_box.tsx"
    },
    "/database/skill_book": {
      "filePath": "database/(more)/skill_book.tsx"
    },
    "/database/pet": {
      "filePath": "database/(pets)/pet.tsx"
    },
    "/database/pet_combine_help": {
      "filePath": "database/(pets)/pet_combine_help.tsx"
    },
    "/database/pet_combine_stone": {
      "filePath": "database/(pets)/pet_combine_stone.tsx"
    },
    "/database/pet_skill_stone": {
      "filePath": "database/(pets)/pet_skill_stone.tsx"
    },
    "/database/riding_pet": {
      "filePath": "database/(pets)/riding_pet.tsx"
    },
    "/database/quest": {
      "filePath": "database/(quests)/quest.tsx"
    },
    "/database/quest_item": {
      "filePath": "database/(quests)/quest_item.tsx"
    },
    "/database/quest_scroll": {
      "filePath": "database/(quests)/quest_scroll.tsx"
    },
    "/database/map/$code": {
      "filePath": "database/map_.$code.tsx"
    },
    "/database/monster/$code": {
      "filePath": "database/(actors)/monster_.$code.tsx"
    },
    "/database/npc/$code": {
      "filePath": "database/(actors)/npc_.$code.tsx"
    },
    "/database/material/$code": {
      "filePath": "database/(crafting)/material_.$code.tsx"
    },
    "/database/production/$code": {
      "filePath": "database/(crafting)/production_.$code.tsx"
    },
    "/database/production_book/$code": {
      "filePath": "database/(crafting)/production_book_.$code.tsx"
    },
    "/database/recipe/$code": {
      "filePath": "database/(crafting)/recipe_.$code.tsx"
    },
    "/database/seal_break_help/$code": {
      "filePath": "database/(enhancing)/seal_break_help_.$code.tsx"
    },
    "/database/upgrade_crystal/$code": {
      "filePath": "database/(enhancing)/upgrade_crystal_.$code.tsx"
    },
    "/database/upgrade_help/$code": {
      "filePath": "database/(enhancing)/upgrade_help_.$code.tsx"
    },
    "/database/upgrade_stone/$code": {
      "filePath": "database/(enhancing)/upgrade_stone_.$code.tsx"
    },
    "/database/essence/$code": {
      "filePath": "database/(essence)/essence_.$code.tsx"
    },
    "/database/essence_help/$code": {
      "filePath": "database/(essence)/essence_help_.$code.tsx"
    },
    "/database/accessory/$code": {
      "filePath": "database/(extra-equipment)/accessory_.$code.tsx"
    },
    "/database/dress/$code": {
      "filePath": "database/(extra-equipment)/dress_.$code.tsx"
    },
    "/database/hat/$code": {
      "filePath": "database/(extra-equipment)/hat_.$code.tsx"
    },
    "/database/fishing_bait/$code": {
      "filePath": "database/(fishing)/fishing_bait_.$code.tsx"
    },
    "/database/fishing_material/$code": {
      "filePath": "database/(fishing)/fishing_material_.$code.tsx"
    },
    "/database/bullet/$code": {
      "filePath": "database/(more)/bullet_.$code.tsx"
    },
    "/database/consumable/$code": {
      "filePath": "database/(more)/consumable_.$code.tsx"
    },
    "/database/random_box/$code": {
      "filePath": "database/(more)/random_box_.$code.tsx"
    },
    "/database/skill_book/$code": {
      "filePath": "database/(more)/skill_book_.$code.tsx"
    },
    "/database/pet/$code": {
      "filePath": "database/(pets)/pet_.$code.tsx"
    },
    "/database/pet_combine_help/$code": {
      "filePath": "database/(pets)/pet_combine_help_.$code.tsx"
    },
    "/database/pet_combine_stone/$code": {
      "filePath": "database/(pets)/pet_combine_stone_.$code.tsx"
    },
    "/database/pet_skill_stone/$code": {
      "filePath": "database/(pets)/pet_skill_stone_.$code.tsx"
    },
    "/database/riding_pet/$code": {
      "filePath": "database/(pets)/riding_pet_.$code.tsx"
    },
    "/database/quest/$code": {
      "filePath": "database/(quests)/quest_.$code.tsx"
    },
    "/database/quest_item/$code": {
      "filePath": "database/(quests)/quest_item_.$code.tsx"
    },
    "/database/quest_scroll/$code": {
      "filePath": "database/(quests)/quest_scroll_.$code.tsx"
    },
    "/database/ship_anchor": {
      "filePath": "database/(ship)/(routes)/ship_anchor.tsx"
    },
    "/database/ship_body": {
      "filePath": "database/(ship)/(routes)/ship_body.tsx"
    },
    "/database/ship_figure": {
      "filePath": "database/(ship)/(routes)/ship_figure.tsx"
    },
    "/database/ship_flag": {
      "filePath": "database/(ship)/(routes)/ship_flag.tsx"
    },
    "/database/ship_front": {
      "filePath": "database/(ship)/(routes)/ship_front.tsx"
    },
    "/database/ship_head_mast": {
      "filePath": "database/(ship)/(routes)/ship_head_mast.tsx"
    },
    "/database/ship_magic_stone": {
      "filePath": "database/(ship)/(routes)/ship_magic_stone.tsx"
    },
    "/database/ship_main_mast": {
      "filePath": "database/(ship)/(routes)/ship_main_mast.tsx"
    },
    "/database/ship_normal_weapon": {
      "filePath": "database/(ship)/(routes)/ship_normal_weapon.tsx"
    },
    "/database/ship_shell": {
      "filePath": "database/(ship)/(routes)/ship_shell.tsx"
    },
    "/database/ship_special_weapon": {
      "filePath": "database/(ship)/(routes)/ship_special_weapon.tsx"
    },
    "/database/coat": {
      "filePath": "database/(weapons_armor)/(armor)/coat.tsx"
    },
    "/database/gauntlet": {
      "filePath": "database/(weapons_armor)/(armor)/gauntlet.tsx"
    },
    "/database/pants": {
      "filePath": "database/(weapons_armor)/(armor)/pants.tsx"
    },
    "/database/shield": {
      "filePath": "database/(weapons_armor)/(armor)/shield.tsx"
    },
    "/database/shoes": {
      "filePath": "database/(weapons_armor)/(armor)/shoes.tsx"
    },
    "/database/cariad": {
      "filePath": "database/(weapons_armor)/(weapons)/cariad.tsx"
    },
    "/database/dagger": {
      "filePath": "database/(weapons_armor)/(weapons)/dagger.tsx"
    },
    "/database/duals": {
      "filePath": "database/(weapons_armor)/(weapons)/duals.tsx"
    },
    "/database/fishing_rod": {
      "filePath": "database/(weapons_armor)/(weapons)/fishing_rod.tsx"
    },
    "/database/one_handed_sword": {
      "filePath": "database/(weapons_armor)/(weapons)/one_handed_sword.tsx"
    },
    "/database/rapier": {
      "filePath": "database/(weapons_armor)/(weapons)/rapier.tsx"
    },
    "/database/rifle": {
      "filePath": "database/(weapons_armor)/(weapons)/rifle.tsx"
    },
    "/database/two_handed_sword": {
      "filePath": "database/(weapons_armor)/(weapons)/two_handed_sword.tsx"
    },
    "/database/ship_anchor/$code": {
      "filePath": "database/(ship)/(routes)/ship_anchor_.$code.tsx"
    },
    "/database/ship_body/$code": {
      "filePath": "database/(ship)/(routes)/ship_body_.$code.tsx"
    },
    "/database/ship_figure/$code": {
      "filePath": "database/(ship)/(routes)/ship_figure_.$code.tsx"
    },
    "/database/ship_flag/$code": {
      "filePath": "database/(ship)/(routes)/ship_flag_.$code.tsx"
    },
    "/database/ship_front/$code": {
      "filePath": "database/(ship)/(routes)/ship_front_.$code.tsx"
    },
    "/database/ship_head_mast/$code": {
      "filePath": "database/(ship)/(routes)/ship_head_mast_.$code.tsx"
    },
    "/database/ship_magic_stone/$code": {
      "filePath": "database/(ship)/(routes)/ship_magic_stone_.$code.tsx"
    },
    "/database/ship_main_mast/$code": {
      "filePath": "database/(ship)/(routes)/ship_main_mast_.$code.tsx"
    },
    "/database/ship_normal_weapon/$code": {
      "filePath": "database/(ship)/(routes)/ship_normal_weapon_.$code.tsx"
    },
    "/database/ship_shell/$code": {
      "filePath": "database/(ship)/(routes)/ship_shell_.$code.tsx"
    },
    "/database/ship_special_weapon/$code": {
      "filePath": "database/(ship)/(routes)/ship_special_weapon_.$code.tsx"
    },
    "/database/coat/$code": {
      "filePath": "database/(weapons_armor)/(armor)/coat_.$code.tsx"
    },
    "/database/gauntlet/$code": {
      "filePath": "database/(weapons_armor)/(armor)/gauntlet_.$code.tsx"
    },
    "/database/pants/$code": {
      "filePath": "database/(weapons_armor)/(armor)/pants_.$code.tsx"
    },
    "/database/shield/$code": {
      "filePath": "database/(weapons_armor)/(armor)/shield_.$code.tsx"
    },
    "/database/shoes/$code": {
      "filePath": "database/(weapons_armor)/(armor)/shoes_.$code.tsx"
    },
    "/database/cariad/$code": {
      "filePath": "database/(weapons_armor)/(weapons)/cariad_.$code.tsx"
    },
    "/database/dagger/$code": {
      "filePath": "database/(weapons_armor)/(weapons)/dagger_.$code.tsx"
    },
    "/database/duals/$code": {
      "filePath": "database/(weapons_armor)/(weapons)/duals_.$code.tsx"
    },
    "/database/fishing_rod/$code": {
      "filePath": "database/(weapons_armor)/(weapons)/fishing_rod_.$code.tsx"
    },
    "/database/one_handed_sword/$code": {
      "filePath": "database/(weapons_armor)/(weapons)/one_handed_sword_.$code.tsx"
    },
    "/database/rapier/$code": {
      "filePath": "database/(weapons_armor)/(weapons)/rapier_.$code.tsx"
    },
    "/database/rifle/$code": {
      "filePath": "database/(weapons_armor)/(weapons)/rifle_.$code.tsx"
    },
    "/database/two_handed_sword/$code": {
      "filePath": "database/(weapons_armor)/(weapons)/two_handed_sword_.$code.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
